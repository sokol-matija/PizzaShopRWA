@page
@model PizzaShopWebApp.Pages.Dashboard.OrderPageModel
@{
    ViewData["Title"] = "Order Food";
    Layout = "_DashboardLayout";
}

<div class="order-container">
    <div class="order-content">
        <div class="order-header">
            <h1>Place Order</h1>
            
            <div class="search-filter-container">
                <div class="search-bar">
                    <i class="bx bx-search"></i>
                    <input type="text" id="searchInput" name="searchTerm" value="@Model.SearchTerm" placeholder="Search for food, coffee, etc.." />
                    @if (!string.IsNullOrEmpty(Model.SearchTerm))
                    {
                        <button type="button" class="clear-search" onclick="clearSearch()">
                            <i class='bx bx-x'></i>
                        </button>
                    }
                </div>
                
                <div class="filter-dropdown">
                    <select id="categoryFilter" name="categoryId">
                        <option value="">All Categories</option>
                        @foreach (var category in Model.Categories)
                        {
                            <option value="@category.Id" selected="@(Model.SelectedCategoryId == category.Id)">@category.Name</option>
                        }
                    </select>
                </div>
            </div>
        </div>
        
        <div class="category-tabs">
            <button class="category-tab @(Model.SelectedCategoryId == null ? "active" : "")" onclick="window.location.href='?'">All</button>
            @foreach (var category in Model.Categories.Take(4))
            {
                <button class="category-tab @(Model.SelectedCategoryId == category.Id ? "active" : "")" 
                        onclick="window.location.href='?categoryId=@category.Id'">@category.Name</button>
            }
        </div>
        
        <div class="food-card-grid">
            @if (Model.Foods.Any())
            {
                @foreach (var food in Model.Foods)
                {
                    <div class="food-card" data-id="@food.Id">
                        <div class="food-card-image">
                            <img src="@(string.IsNullOrEmpty(food.ImageUrl) ? "/Images/basic_food_image.png" : food.ImageUrl)" alt="@food.Name">
                            @if (food.IsPopular)
                            {
                                <span class="food-badge popular">Popular</span>
                            }
                        </div>
                        <div class="food-card-content">
                            <h3 class="food-card-name">@food.Name</h3>
                            <p class="food-card-price">$@food.Price.ToString("0.00")</p>
                            <p class="food-card-available">@(food.OrderCount > 0 ? $"{food.OrderCount} Bowls available" : "Available")</p>
                            <form method="post" asp-page-handler="AddToCart" class="add-to-cart-form">
                                <input type="hidden" name="foodId" value="@food.Id" />
                                <input type="hidden" name="quantity" value="1" class="quantity-input" />
                                <div class="add-to-cart-container">
                                    <button type="submit" class="add-to-cart-btn">
                                        <i class='bx bx-plus'></i>
                                    </button>
                                </div>
                            </form>
                        </div>
                    </div>
                }
            }
            else
            {
                <div class="no-items-message">
                    <i class='bx bx-search-alt no-results-icon'></i>
                    <p>No items found. Try adjusting your search or filter.</p>
                </div>
            }
        </div>
    </div>
    
    <div class="order-sidebar">
        <div class="cart-header">
            <h2>Current Order <span class="cart-count-badge">@Model.GetTotalItems()</span></h2>
            @if (Model.CartItems.Any())
            {
                <form method="post" asp-page-handler="ClearCart">
                    <button type="submit" class="clear-cart-btn">Clear All</button>
                </form>
            }
        </div>
        
        <div class="cart-items">
            @if (Model.CartItems.Any())
            {
                @foreach (var item in Model.CartItems)
                {
                    <div class="cart-item">
                        <div class="cart-item-info">
                            <h3 class="cart-item-name">@item.Name</h3>
                            <p class="cart-item-price">$@item.Price.ToString("0.00")</p>
                        </div>
                        
                        <div class="cart-item-actions">
                            <div class="quantity-controls">
                                <form method="post" asp-page-handler="UpdateCart" class="update-cart-form">
                                    <input type="hidden" name="itemId" value="@item.Id" />
                                    <button type="submit" name="quantity" value="@(item.Quantity - 1)" class="quantity-btn minus">
                                        <i class='bx bx-minus'></i>
                                    </button>
                                    <span class="quantity">@item.Quantity</span>
                                    <button type="submit" name="quantity" value="@(item.Quantity + 1)" class="quantity-btn plus">
                                        <i class='bx bx-plus'></i>
                                    </button>
                                </form>
                            </div>
                            
                            <form method="post" asp-page-handler="RemoveFromCart">
                                <input type="hidden" name="itemId" value="@item.Id" />
                                <button type="submit" class="remove-item-btn">
                                    <i class='bx bx-trash'></i>
                                </button>
                            </form>
                        </div>
                    </div>
                }
            }
            else
            {
                <div class="empty-cart">
                    <i class='bx bx-cart-alt empty-cart-icon'></i>
                    <p>Your cart is empty</p>
                    <p class="empty-cart-subtitle">Add some delicious items!</p>
                </div>
            }
        </div>
        
        <div class="cart-summary">
            <div class="summary-row">
                <span>Subtotal</span>
                <span>$@Model.GetCartTotal().ToString("0.00")</span>
            </div>
            <div class="summary-row">
                <span>Discount</span>
                <span>-$0.00</span>
            </div>
            <div class="summary-row total">
                <span>Total</span>
                <span>$@Model.GetCartTotal().ToString("0.00")</span>
            </div>
        </div>
        
        @if (Model.CartItems.Any())
        {
            <a href="/Dashboard/Payment" class="checkout-btn">
                <span>Continue to Payment</span>
                <i class='bx bx-right-arrow-alt'></i>
            </a>
        }
        else
        {
            <button class="checkout-btn disabled" disabled>
                <span>Continue to Payment</span>
                <i class='bx bx-right-arrow-alt'></i>
            </button>
        }
    </div>
</div>

<div id="notification" class="notification">
    <div class="notification-content">
        <i class="notification-icon"></i>
        <span class="notification-message"></span>
    </div>
    <button class="notification-close"><i class='bx bx-x'></i></button>
</div>

<style>
    :root {
        --scrollbar-width: 6px;
        --scrollbar-height: 4px;
        --scrollbar-thumb-color: var(--accent-color);
        --scrollbar-thumb-hover-color: var(--accent-hover);
        --scrollbar-track-color-light: var(--secondary-bg-color);
        --scrollbar-track-color-dark: var(--dark-bg-color);
        --scrollbar-radius: 4px;
        --success-color: #6BE2BE;
        --error-color: #FF7A7A;
        --card-anim-time: 0.3s;
        --card-radius: 16px;
        --card-image-height: 140px;
        --card-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        --card-hover-shadow: 0 8px 24px rgba(0, 0, 0, 0.15);
        --card-active-shadow: 0 12px 32px rgba(0, 0, 0, 0.2);
    }
    
    .order-container {
        display: flex;
        gap: 24px;
        height: calc(100vh - 100px);
    }
    
    .order-content {
        flex: 1;
        overflow-y: auto;
        padding: 0 10px 20px 0;
    }
    
    .order-content::-webkit-scrollbar {
        width: var(--scrollbar-width);
    }
    
    .order-content::-webkit-scrollbar-track {
        background: var(--scrollbar-track-color-light);
        border-radius: var(--scrollbar-radius);
    }
    
    .order-content::-webkit-scrollbar-thumb {
        background-color: var(--scrollbar-thumb-color);
        border-radius: var(--scrollbar-radius);
    }
    
    .order-content::-webkit-scrollbar-thumb:hover {
        background-color: var(--scrollbar-thumb-hover-color);
    }
    
    .order-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 24px;
    }
    
    .order-header h1 {
        font-size: 28px;
        font-weight: 600;
        margin: 0;
    }
    
    .search-filter-container {
        display: flex;
        gap: 16px;
        align-items: center;
    }
    
    .search-bar {
        position: relative;
        min-width: 280px;
    }
    
    .search-bar i {
        position: absolute;
        left: 12px;
        top: 50%;
        transform: translateY(-50%);
        color: var(--text-muted);
    }
    
    .search-bar input {
        width: 100%;
        padding: 12px 40px;
        background-color: var(--dark-bg-color);
        border: 1px solid var(--border-color);
        border-radius: 12px;
        color: var(--text-color);
        font-size: 14px;
        transition: all 0.2s ease;
    }
    
    .search-bar input:focus {
        border-color: var(--accent-color);
        outline: none;
        box-shadow: 0 0 0 2px rgba(234, 124, 105, 0.3);
    }
    
    .clear-search {
        position: absolute;
        right: 12px;
        top: 50%;
        transform: translateY(-50%);
        background: none;
        border: none;
        color: var(--text-muted);
        cursor: pointer;
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 0;
        font-size: 16px;
        width: 24px;
        height: 24px;
        border-radius: 50%;
        transition: all 0.2s ease;
    }
    
    .clear-search:hover {
        color: var(--text-color);
        background-color: rgba(255, 255, 255, 0.1);
    }
    
    .filter-dropdown select {
        padding: 12px 16px;
        background-color: var(--dark-bg-color);
        border: 1px solid var(--border-color);
        border-radius: 12px;
        color: var(--text-color);
        font-size: 14px;
        cursor: pointer;
        min-width: 160px;
        transition: all 0.2s ease;
    }
    
    .filter-dropdown select:focus {
        border-color: var(--accent-color);
        outline: none;
        box-shadow: 0 0 0 2px rgba(234, 124, 105, 0.3);
    }
    
    .category-tabs {
        display: flex;
        gap: 16px;
        margin-bottom: 24px;
        overflow-x: auto;
        padding-bottom: 8px;
    }
    
    .category-tabs::-webkit-scrollbar {
        height: var(--scrollbar-height);
    }
    
    .category-tabs::-webkit-scrollbar-track {
        background: var(--scrollbar-track-color-light);
        border-radius: var(--scrollbar-radius);
    }
    
    .category-tabs::-webkit-scrollbar-thumb {
        background-color: var(--scrollbar-thumb-color);
        border-radius: var(--scrollbar-radius);
    }
    
    .category-tabs::-webkit-scrollbar-thumb:hover {
        background-color: var(--scrollbar-thumb-hover-color);
    }
    
    .category-tab {
        padding: 10px 20px;
        background-color: var(--dark-bg-color);
        border: none;
        border-radius: 8px;
        color: var(--text-muted);
        font-size: 14px;
        font-weight: 500;
        cursor: pointer;
        transition: all 0.2s;
        white-space: nowrap;
    }
    
    .category-tab.active {
        background-color: var(--accent-color);
        color: white;
    }
    
    .category-tab:hover:not(.active) {
        background-color: rgba(234, 124, 105, 0.1);
        color: var(--accent-color);
    }
    
    .dashboard-container{
        margin-left: 1rem;
    }

    .food-card-grid {
        display: flex;
        flex-wrap: wrap;
        gap: 24px;
        padding: 40px 0;
    }
    
    .food-card {
        background-color: var(--dark-bg-color);
        border-radius: var(--card-radius);
        overflow: visible;
        transition: transform var(--card-anim-time), box-shadow var(--card-anim-time);
        position: relative;
        display: flex;
        flex-direction: column;
        box-shadow: var(--card-shadow);
        width: calc(29% - 16px);
        min-width: 120px;
        margin-bottom: 20px;
        padding-top: 60px;
    }
    
    .food-card:hover {
        transform: translateY(-5px);
        box-shadow: var(--card-hover-shadow);
    }
    
    .food-card.added-to-cart {
        animation: addToCartPulse 0.7s ease-in-out;
    }
    
    @@keyframes addToCartPulse {
        0% {
            transform: translateY(-5px) scale(1);
            box-shadow: var(--card-hover-shadow);
        }
        30% {
            transform: translateY(-5px) scale(1.02);
            box-shadow: var(--card-active-shadow);
        }
        100% {
            transform: translateY(-5px) scale(1);
            box-shadow: var(--card-hover-shadow);
        }
    }
    
    .food-card-image {
        position: absolute;
        top: -40px;
        left: 50%;
        transform: translateX(-50%);
        width: 120px;
        height: 120px;
        border-radius: 50%;
        overflow: hidden;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);
        background-color: var(--dark-bg-color);
        z-index: 1;
    }
    
    .food-card-image img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        transition: transform 0.5s ease;
    }
    
    .food-card:hover .food-card-image img {
        //transform: scale(1.1);
    }
    
    .food-badge {
        position: absolute;
        top: 10px;
        left: 10px;
        padding: 4px 8px;
        border-radius: 4px;
        font-size: 12px;
        font-weight: 500;
    }
    
    .food-badge.popular {
        background-color: var(--accent-color);
        color: white;
    }
    
    .food-card-content {
        padding: 16px;
        position: relative;
        flex: 1;
        display: flex;
        flex-direction: column;
        text-align: center;
    }
    
    .food-card-name {
        font-size: 16px;
        font-weight: 500;
        margin: 0 0 8px 0;
        color: var(--text-color);
    }
    
    .food-card-price {
        font-size: 18px;
        font-weight: 600;
        margin: 0 0 8px 0;
        color: var(--text-color);
    }
    
    .food-card-available {
        font-size: 12px;
        color: var(--text-muted);
        margin: 0 0 12px 0;
    }
    
    .add-to-cart-container {
        display: flex;
        justify-content: center;
        margin-top: auto;
    }
    
    .add-to-cart-btn {
        width: 36px;
        height: 36px;
        border-radius: 8px;
        background-color: var(--accent-color);
        color: white;
        border: none;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
        position: relative;
        overflow: hidden;
        box-shadow: 0 2px 8px rgba(234, 124, 105, 0.3);
    }
    
    .add-to-cart-btn::before {
        content: '';
        position: absolute;
        top: 50%;
        left: 50%;
        width: 0;
        height: 0;
        background: rgba(255, 255, 255, 0.3);
        border-radius: 50%;
        transform: translate(-50%, -50%);
        transition: width 0.4s ease-out, height 0.4s ease-out;
        opacity: 0;
    }
    
    .add-to-cart-btn.clicked {
        transform: scale(0.9);
        box-shadow: 0 1px 4px rgba(234, 124, 105, 0.2);
    }
    
    .add-to-cart-btn.clicked::before {
        width: 200%;
        height: 200%;
        opacity: 1;
    }
    
    .add-to-cart-btn i {
        font-size: 20px;
        transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        position: relative;
        z-index: 1;
    }
    
    .add-to-cart-btn.clicked i {
        transform: rotate(180deg) scale(1.2);
    }
    
    .add-to-cart-btn:disabled {
        background-color: var(--border-color);
        cursor: not-allowed;
        opacity: 0.7;
        box-shadow: none;
        transform: none;
    }
    
    .add-to-cart-btn:disabled.clicked::before {
        display: none;
    }
    
    .add-to-cart-btn:disabled i {
        transform: none;
    }
    
    .no-items-message {
        grid-column: 1 / -1;
        text-align: center;
        padding: 60px 40px;
        background-color: var(--dark-bg-color);
        border-radius: 16px;
        color: var(--text-muted);
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 16px;
        box-shadow: var(--card-shadow);
    }
    
    .no-results-icon {
        font-size: 48px;
        opacity: 0.5;
    }
    
    .order-sidebar {
        width: 350px;
        background-color: var(--dark-bg-color);
        border-radius: 16px;
        padding: 24px;
        display: flex;
        flex-direction: column;
        height: 100%;
        box-shadow: var(--card-shadow);
    }
    
    .cart-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
        padding-bottom: 16px;
        border-bottom: 1px solid var(--border-color);
    }
    
    .cart-header h2 {
        font-size: 20px;
        font-weight: 600;
        margin: 0;
        display: flex;
        align-items: center;
    }
    
    .cart-count-badge {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        min-width: 24px;
        height: 24px;
        background-color: var(--accent-color);
        color: white;
        border-radius: 12px;
        font-size: 12px;
        margin-left: 8px;
        padding: 0 6px;
        transition: all 0.3s;
    }
    
    .cart-count-badge:empty {
        display: none;
    }
    
    .clear-cart-btn {
        background: transparent;
        border: none;
        color: var(--accent-color);
        font-size: 14px;
        cursor: pointer;
        transition: color 0.2s;
    }
    
    .clear-cart-btn:hover {
        color: var(--accent-hover);
        text-decoration: underline;
    }
    
    .cart-items {
        flex: 1;
        overflow-y: auto;
        margin-bottom: 24px;
        padding-right: 8px;
    }
    
    .cart-items::-webkit-scrollbar {
        width: var(--scrollbar-width);
    }
    
    .cart-items::-webkit-scrollbar-track {
        background: var(--scrollbar-track-color-dark);
        border-radius: var(--scrollbar-radius);
    }
    
    .cart-items::-webkit-scrollbar-thumb {
        background-color: var(--scrollbar-thumb-color);
        border-radius: var(--scrollbar-radius);
    }
    
    .cart-items::-webkit-scrollbar-thumb:hover {
        background-color: var(--scrollbar-thumb-hover-color);
    }
    
    .cart-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 16px 0;
        border-bottom: 1px solid var(--border-color);
        animation: fadeIn 0.3s ease-in-out;
    }
    
    @@keyframes fadeIn {
        from { opacity: 0; transform: translateY(10px); }
        to { opacity: 1; transform: translateY(0); }
    }
    
    .cart-item:last-child {
        border-bottom: none;
    }
    
    .cart-item-info {
        flex: 1;
    }
    
    .cart-item-name {
        font-size: 16px;
        font-weight: 500;
        margin: 0 0 4px 0;
    }
    
    .cart-item-price {
        font-size: 14px;
        color: var(--text-muted);
        margin: 0;
    }
    
    .cart-item-actions {
        display: flex;
        align-items: center;
        gap: 16px;
    }
    
    .quantity-controls {
        display: flex;
        align-items: center;
    }
    
    .update-cart-form {
        display: flex;
        align-items: center;
    }
    
    .quantity-btn {
        width: 28px;
        height: 28px;
        border-radius: 8px;
        background-color: var(--secondary-bg-color);
        color: var(--text-color);
        border: 1px solid var(--border-color);
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        transition: all 0.2s;
    }
    
    .quantity-btn:hover {
        background-color: var(--border-color);
        transform: scale(1.05);
    }
    
    .quantity-btn:active {
        transform: scale(0.95);
    }
    
    .quantity {
        margin: 0 8px;
        font-size: 14px;
        min-width: 20px;
        text-align: center;
    }
    
    .remove-item-btn {
        background: transparent;
        border: none;
        color: var(--text-muted);
        cursor: pointer;
        transition: all 0.2s;
    }
    
    .remove-item-btn:hover {
        color: var(--accent-color);
        transform: scale(1.1);
    }
    
    .remove-item-btn:active {
        transform: scale(0.95);
    }
    
    .remove-item-btn i {
        font-size: 18px;
    }
    
    .empty-cart {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        text-align: center;
        padding: 60px 0;
        color: var(--text-muted);
    }
    
    .empty-cart-icon {
        font-size: 48px;
        margin-bottom: 16px;
        color: var(--border-color);
    }
    
    .empty-cart p {
        margin: 0 0 4px 0;
        font-size: 16px;
    }
    
    .empty-cart-subtitle {
        font-size: 14px !important;
        opacity: 0.7;
    }
    
    .cart-summary {
        margin-bottom: 24px;
        background-color: var(--secondary-bg-color);
        border-radius: 12px;
        padding: 16px;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
    }
    
    .summary-row {
        display: flex;
        justify-content: space-between;
        margin-bottom: 12px;
        font-size: 14px;
        color: var(--text-muted);
    }
    
    .summary-row:last-child {
        margin-bottom: 0;
    }
    
    .summary-row.total {
        font-weight: 600;
        font-size: 16px;
        color: var(--text-color);
        padding-top: 12px;
        border-top: 1px solid var(--border-color);
        margin-top: 12px;
    }
    
    .checkout-btn {
        padding: 14px 20px;
        background-color: var(--accent-color);
        color: white;
        border: none;
        border-radius: 8px;
        font-size: 16px;
        font-weight: 500;
        cursor: pointer;
        transition: all 0.2s;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 8px;
        text-decoration: none;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
    }
    
    .checkout-btn i {
        font-size: 20px;
        transition: transform 0.3s;
    }
    
    .checkout-btn:hover {
        background-color: var(--accent-hover);
        transform: translateY(-2px);
    }
    
    .checkout-btn:hover i {
        transform: translateX(4px);
    }
    
    .checkout-btn:active {
        transform: translateY(0);
    }
    
    .checkout-btn.disabled {
        background-color: var(--border-color);
        cursor: not-allowed;
        opacity: 0.7;
        box-shadow: none;
    }
    
    .notification {
        position: fixed;
        bottom: 30px;
        right: 30px;
        background-color: var(--dark-bg-color);
        border-radius: 8px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
        display: flex;
        align-items: center;
        justify-content: space-between;
        padding: 16px 20px;
        z-index: 1000;
        min-width: 300px;
        transform: translateY(100px);
        opacity: 0;
        visibility: hidden;
        transition: transform 0.3s, opacity 0.3s, visibility 0.3s;
    }
    
    .notification.show {
        transform: translateY(0);
        opacity: 1;
        visibility: visible;
    }
    
    .notification.success {
        border-left: 4px solid var(--success-color);
    }
    
    .notification.error {
        border-left: 4px solid var(--error-color);
    }
    
    .notification-content {
        display: flex;
        align-items: center;
        gap: 12px;
    }
    
    .notification-icon {
        font-size: 24px;
    }
    
    .notification.success .notification-icon:before {
        content: '\ea08';
        font-family: 'boxicons';
        color: var(--success-color);
    }
    
    .notification.error .notification-icon:before {
        content: '\ec14';
        font-family: 'boxicons';
        color: var(--error-color);
    }
    
    .notification-message {
        font-size: 14px;
        color: var(--text-color);
    }
    
    .notification-close {
        background: transparent;
        border: none;
        color: var(--text-muted);
        cursor: pointer;
        padding: 0;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 18px;
        transition: color 0.2s;
    }
    
    .notification-close:hover {
        color: var(--text-color);
    }
    
    @@media (max-width: 1200px) {
        .food-card {
            width: calc(50% - 12px);
        }
    }
    
    @@media (max-width: 992px) {
        .order-container {
            flex-direction: column;
            height: auto;
        }
        
        .order-content {
            padding-right: 0;
        }
        
        .order-sidebar {
            width: 100%;
            margin-top: 24px;
            height: auto;
        }
        
        .cart-items {
            max-height: 300px;
        }
    }
    
    @@media (max-width: 768px) {
        .order-header {
            flex-direction: column;
            align-items: flex-start;
            gap: 16px;
        }
        
        .search-filter-container {
            width: 100%;
            flex-direction: column;
            align-items: stretch;
        }
        
        .search-bar {
            width: 100%;
        }
        
        .filter-dropdown {
            width: 100%;
        }
        
        .filter-dropdown select {
            width: 100%;
        }
        
        .food-card {
            width: 100%;
        }
        
        .notification {
            left: 20px;
            right: 20px;
            min-width: unset;
        }
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Set up notification system
        const notification = document.getElementById('notification');
        const notificationMessage = notification.querySelector('.notification-message');
        const notificationClose = notification.querySelector('.notification-close');
        
        // Dynamic search with debounce
        const searchInput = document.getElementById('searchInput');
        const categoryFilter = document.getElementById('categoryFilter');
        
        let searchTimeout;
        
        searchInput.addEventListener('input', function() {
            clearTimeout(searchTimeout);
            searchTimeout = setTimeout(() => {
                performSearch();
            }, 300); // 300ms debounce delay
        });
        
        categoryFilter.addEventListener('change', function() {
            performSearch();
        });
        
        function performSearch() {
            const searchTerm = searchInput.value;
            const categoryId = categoryFilter.value;
            
            const url = new URL(window.location.href);
            
            if (searchTerm) {
                url.searchParams.set('searchTerm', searchTerm);
            } else {
                url.searchParams.delete('searchTerm');
            }
            
            if (categoryId) {
                url.searchParams.set('categoryId', categoryId);
            } else {
                url.searchParams.delete('categoryId');
            }
            
            window.location.href = url.toString();
        }
        
        // Clear search function
        window.clearSearch = function() {
            searchInput.value = '';
            performSearch();
        };
        
        // Process TempData messages and show notifications
        @if (TempData["SuccessMessage"] != null)
        {
            <text>
            showNotification('success', '@TempData["SuccessMessage"]');
            </text>
        }
        
        @if (TempData["ErrorMessage"] != null)
        {
            <text>
            showNotification('error', '@TempData["ErrorMessage"]');
            </text>
        }
        
        function showNotification(type, message) {
            notification.classList.remove('success', 'error');
            notification.classList.add(type);
            notificationMessage.textContent = message;
            
            setTimeout(() => {
                notification.classList.add('show');
            }, 100);
            
            const hideTimeout = setTimeout(() => {
                notification.classList.remove('show');
            }, 5000);
            
            notificationClose.addEventListener('click', function() {
                clearTimeout(hideTimeout);
                notification.classList.remove('show');
            });
        }
        
        // Add animation for click events on add to cart buttons
        const addToCartButtons = document.querySelectorAll('.add-to-cart-btn');
        
        addToCartButtons.forEach(button => {
            button.addEventListener('click', function(e) {
                e.preventDefault();
                const form = this.closest('form');
                const foodCard = this.closest('.food-card');
                
                // Add clicked class for animation
                this.classList.add('clicked');
                
                // Remove clicked class after animation
                setTimeout(() => {
                    this.classList.remove('clicked');
                }, 400);
                
                if (foodCard) {
                    foodCard.classList.add('added-to-cart');
                    setTimeout(() => {
                        foodCard.classList.remove('added-to-cart');
                    }, 700);
                }

                // Submit form via AJAX
                fetch(form.action, {
                    method: 'POST',
                    body: new FormData(form)
                })
                .then(response => response.json())
                .then(data => {
                    showNotification(data.success ? 'success' : 'error', data.message);
                })
                .catch(error => {
                    showNotification('error', 'An error occurred while adding to cart.');
                });
            });
        });
    });
</script>
