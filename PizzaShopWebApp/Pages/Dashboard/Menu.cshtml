@page
@model PizzaShopWebApp.Pages.Dashboard.MenuModel
@{
    ViewData["Title"] = "Products Management";
    Layout = "_DashboardLayout";
}

<div class="main-content">
    <div class="products-management">
        <div class="header-section">
            <h1>Products Management</h1>
            <div class="actions-container">
                <div class="search-bar">
                    <i class='bx bx-search'></i>
                    <input type="text" id="searchInput" placeholder="Search products..." 
                           value="@Model.SearchTerm" onkeyup="if(event.key === 'Enter') searchProducts()">
                    @if (!string.IsNullOrEmpty(Model.SearchTerm))
                    {
                        <button type="button" class="clear-search" onclick="clearSearch()">
                            <i class='bx bx-x'></i>
                        </button>
                    }
                </div>
                <button class="btn-manage-categories" id="manageCategories">
                    <i class='bx bx-grid-alt'></i>
                    Manage Categories
                </button>
            </div>
        </div>
        
        <div class="filters-section">
            <div class="category-tabs">
                <button class="tab-item @(string.IsNullOrEmpty(Model.SelectedCategorySlug) ? "active" : "")" 
                        onclick="window.location.href='?'">All</button>
                
                @foreach (var category in Model.Categories)
                {
                    <button class="tab-item @(Model.SelectedCategorySlug == category.Name.ToLower().Replace(" ", "-") ? "active" : "")" 
                            onclick="window.location.href='?category=@category.Name.ToLower().Replace(" ", "-")'">
                        @category.Name
                    </button>
                }
            </div>
            
            <div class="allergen-filters">
                @foreach (var allergen in Model.Allergens)
                {
                    <div class="allergen-filter @(Model.ExcludedAllergenIds.Contains(allergen.Id) ? "excluded" : "")" 
                         data-allergen-id="@allergen.Id" onclick="toggleAllergenFilter(@allergen.Id)">
                        <div class="allergen-icon">
                            <i class='bx bx-food-tag'></i>
                        </div>
                        <span>@allergen.Name</span>
                    </div>
                }
            </div>
        </div>
        
        <div class="products-container">
            <!-- Add New Dish Card -->
            <div class="add-dish-card" onclick="window.location.href='/Dashboard/Menu/EditItem'">
                <div class="add-icon">
                    <i class='bx bx-plus'></i>
                </div>
                <p>Add new dish</p>
            </div>
            
            @foreach (var item in Model.MenuItems)
            {
                <div class="dish-card" data-id="@item.Id" data-category="@item.FoodCategoryId">
                    <div class="dish-image-container">
                        <img src="@(string.IsNullOrEmpty(item.ImageUrl) ? "/Images/basic_food_image.png" : item.ImageUrl)" 
                            alt="@item.Name" class="dish-image">
                        
                        @if (item.IsPopular)
                        {
                            <span class="dish-badge popular">Popular</span>
                        }
                        
                        @if (item.IsVegetarian)
                        {
                            <span class="dish-badge vegetarian">Vegetarian</span>
                        }
                    </div>
                    
                    <div class="dish-details">
                        <h3 class="dish-name">@item.Name</h3>
                        <div class="dish-info">
                            <p class="dish-price">$@item.Price.ToString("0.00")</p>
                            <p class="dish-bowls">@item.OrderCount Bowls</p>
                        </div>
                        
                        @if (item.Allergens.Any())
                        {
                            <div class="allergen-badges">
                                @foreach (var allergen in item.Allergens)
                                {
                                    <span class="allergen-badge" title="@allergen.Name">
                                        @switch (allergen.Name.ToLower())
                                        {
                                            case "gluten":
                                                <i class='bx bx-cookie'></i>
                                                break;
                                            case "dairy":
                                                <i class='bx bxs-drink'></i>
                                                break;
                                            case "nuts":
                                                <i class='bx bx-food-menu'></i>
                                                break;
                                            case "soy":
                                                <i class='bx bx-food-tag'></i>
                                                break;
                                            case "shellfish":
                                                <i class='bx bx-bowl-hot'></i>
                                                break;
                                            case "eggs":
                                                <i class='bx bx-dish'></i>
                                                break;
                                            default:
                                                <i class='bx bx-food-tag'></i>
                                                break;
                                        }
                                        <span class="allergen-name">@allergen.Name</span>
                                    </span>
                                }
                            </div>
                        }
                    </div>
                    
                    <div class="dish-actions">
                        <a href="/Dashboard/Menu/EditItem/@item.Id" class="edit-dish-btn">
                            <i class='bx bx-edit-alt'></i>
                            Edit
                        </a>
                        <button class="view-dish-btn" onclick="viewDishDetails(@item.Id)">
                            <i class='bx bx-show'></i>
                            View
                        </button>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<!-- Dish Details Modal -->
<div id="dishDetailsModal" class="modal">
    <div class="modal-content">
        <div class="modal-header">
            <h2 id="modalDishName"></h2>
            <button class="modal-close">&times;</button>
        </div>
        <div class="modal-body">
            <div class="modal-dish-image">
                <img id="modalDishImage" src="" alt="Dish">
                <div class="modal-dish-badges">
                    <span id="modalPopularBadge" class="dish-badge popular" style="display:none">Popular</span>
                    <span id="modalVegetarianBadge" class="dish-badge vegetarian" style="display:none">Vegetarian</span>
                </div>
            </div>
            <div class="modal-dish-details">
                <div class="detail-row">
                    <span class="detail-label">Price:</span>
                    <span id="modalDishPrice" class="detail-value"></span>
                </div>
                <div class="detail-row">
                    <span class="detail-label">Category:</span>
                    <span id="modalDishCategory" class="detail-value"></span>
                </div>
                <div class="detail-row">
                    <span class="detail-label">Allergens:</span>
                    <div id="modalDishAllergens" class="detail-value allergen-list"></div>
                </div>
                <div class="detail-row">
                    <span class="detail-label">Description:</span>
                    <p id="modalDishDescription" class="detail-value"></p>
                </div>
            </div>
        </div>
        <div class="modal-footer">
            <a id="modalEditBtn" href="#" class="btn-edit">Edit Product</a>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let excludedAllergenIds = @(string.IsNullOrEmpty(Request.Query["excludeAllergens"]) ? 
            "[]" : $"[{Request.Query["excludeAllergens"]}]");
        
        function searchProducts() {
            const searchTerm = document.getElementById('searchInput').value;
            const category = '@Model.SelectedCategorySlug';
            const allergens = excludedAllergenIds.join(',');
            
            let url = '?';
            if (searchTerm) url += `searchTerm=${encodeURIComponent(searchTerm)}&`;
            if (category) url += `category=${encodeURIComponent(category)}&`;
            if (allergens) url += `excludeAllergens=${allergens}`;
            
            window.location.href = url;
        }
        
        function clearSearch() {
            const category = '@Model.SelectedCategorySlug';
            const allergens = excludedAllergenIds.join(',');
            
            let url = '?';
            if (category) url += `category=${encodeURIComponent(category)}&`;
            if (allergens) url += `excludeAllergens=${allergens}`;
            
            window.location.href = url;
        }
        
        function toggleAllergenFilter(allergenId) {
            const index = excludedAllergenIds.indexOf(allergenId);
            
            if (index === -1) {
                // Add to excluded list
                excludedAllergenIds.push(allergenId);
            } else {
                // Remove from excluded list
                excludedAllergenIds.splice(index, 1);
            }
            
            const searchTerm = '@Model.SearchTerm';
            const category = '@Model.SelectedCategorySlug';
            const allergens = excludedAllergenIds.join(',');
            
            let url = '?';
            if (searchTerm) url += `searchTerm=${encodeURIComponent(searchTerm)}&`;
            if (category) url += `category=${encodeURIComponent(category)}&`;
            if (allergens) url += `excludeAllergens=${allergens}`;
            
            window.location.href = url;
        }
        
        // Modal functionality
        const modal = document.getElementById('dishDetailsModal');
        const closeBtn = document.querySelector('.modal-close');
        
        closeBtn.addEventListener('click', () => {
            modal.style.display = 'none';
        });
        
        window.addEventListener('click', (event) => {
            if (event.target === modal) {
                modal.style.display = 'none';
            }
        });
        
        function viewDishDetails(dishId) {
            // This would be replaced with actual API call to get dish details
            // For now, we'll use the data we already have on the page
            const menuItems = @Html.Raw(Json.Serialize(Model.MenuItems));
            const dish = menuItems.find(item => item.id === dishId);
            
            if (dish) {
                // Set basic details
                document.getElementById('modalDishName').textContent = dish.name;
                document.getElementById('modalDishPrice').textContent = `$${dish.price.toFixed(2)}`;
                document.getElementById('modalDishCategory').textContent = dish.foodCategoryName;
                document.getElementById('modalDishDescription').textContent = dish.description || "No description available";
                document.getElementById('modalDishImage').src = dish.imageUrl || "/Images/basic_food_image.png";
                document.getElementById('modalEditBtn').href = `/Dashboard/Menu/EditItem/${dish.id}`;
                
                // Handle badges
                document.getElementById('modalPopularBadge').style.display = dish.isPopular ? 'block' : 'none';
                document.getElementById('modalVegetarianBadge').style.display = dish.isVegetarian ? 'block' : 'none';
                
                // Handle allergens
                const allergensContainer = document.getElementById('modalDishAllergens');
                allergensContainer.innerHTML = '';
                
                if (dish.allergens && dish.allergens.length > 0) {
                    dish.allergens.forEach(allergen => {
                        const badge = document.createElement('span');
                        badge.className = 'allergen-badge';
                        badge.title = allergen.name;
                        
                        let icon = '';
                        switch(allergen.name.toLowerCase()) {
                            case "gluten":
                                icon = '<i class="bx bx-cookie"></i>';
                                break;
                            case "dairy":
                                icon = '<i class="bx bxs-drink"></i>';
                                break;
                            case "nuts":
                                icon = '<i class="bx bx-food-menu"></i>';
                                break;
                            case "soy":
                                icon = '<i class="bx bx-food-tag"></i>';
                                break;
                            case "shellfish":
                                icon = '<i class="bx bx-bowl-hot"></i>';
                                break;
                            case "eggs":
                                icon = '<i class="bx bx-dish"></i>';
                                break;
                            default:
                                icon = '<i class="bx bx-food-tag"></i>';
                                break;
                        }
                        
                        badge.innerHTML = `${icon}<span class="allergen-name">${allergen.name}</span>`;
                        allergensContainer.appendChild(badge);
                    });
                } else {
                    const noAllergens = document.createElement('span');
                    noAllergens.textContent = 'None';
                    allergensContainer.appendChild(noAllergens);
                }
                
                // Show the modal
                modal.style.display = 'block';
            }
        }
    </script>
}

<style>
    /* Enhanced styling for Products Management */
    .products-management {
        padding: 32px;
        font-family: 'Poppins', sans-serif;
        min-height: 100vh;
    }
    
    /* Add styling for main content area */
    .main-content {
        background: linear-gradient(135deg, var(--dark-bg-color, #252836) 0%, #1F1D2B 100%);
        min-height: 100vh;
        position: relative;
        width: 100%;
    }
    
    .header-section {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 32px;
        background: rgba(255, 255, 255, 0.03);
        padding: 24px;
        border-radius: 16px;
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.05);
    }
    
    .header-section h1 {
        font-size: 32px;
        font-weight: 600;
        color: var(--text-color, #fff);
        margin: 0;
        background: linear-gradient(45deg, #fff, #EA7C69);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
    }
    
    .actions-container {
        display: flex;
        gap: 20px;
        align-items: center;
    }
    
    .search-bar {
        position: relative;
        width: 320px;
    }
    
    .search-bar i {
        position: absolute;
        left: 16px;
        top: 50%;
        transform: translateY(-50%);
        color: var(--text-muted, #ABBBC2);
        font-size: 18px;
    }
    
    .search-bar input {
        width: 100%;
        padding: 14px 48px;
        background-color: rgba(255, 255, 255, 0.05);
        border: 1px solid rgba(255, 255, 255, 0.1);
        border-radius: 12px;
        color: var(--text-color, #fff);
        font-size: 15px;
        transition: all 0.3s ease;
    }
    
    .search-bar input:focus {
        border-color: var(--accent-color, #EA7C69);
        outline: none;
        box-shadow: 0 0 0 3px rgba(234, 124, 105, 0.2);
    }
    
    .clear-search {
        position: absolute;
        right: 16px;
        top: 50%;
        transform: translateY(-50%);
        background: none;
        border: none;
        color: var(--text-muted, #ABBBC2);
        cursor: pointer;
        padding: 4px;
        border-radius: 50%;
        transition: all 0.3s ease;
    }
    
    .clear-search:hover {
        background: rgba(255, 255, 255, 0.1);
        color: #fff;
    }
    
    .btn-manage-categories {
        display: flex;
        align-items: center;
        gap: 10px;
        background: linear-gradient(45deg, rgba(234, 124, 105, 0.1), rgba(234, 124, 105, 0.2));
        border: 1px solid rgba(234, 124, 105, 0.3);
        color: #fff;
        font-size: 15px;
        padding: 14px 28px;
        border-radius: 12px;
        cursor: pointer;
        transition: all 0.3s ease;
    }
    
    .btn-manage-categories:hover {
        transform: translateY(-2px);
        box-shadow: 0 8px 24px rgba(234, 124, 105, 0.2);
    }
    
    .filters-section {
        margin-bottom: 32px;
        background: rgba(255, 255, 255, 0.03);
        padding: 20px;
        border-radius: 16px;
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.05);
    }
    
    .category-tabs {
        display: flex;
        gap: 12px;
        margin-bottom: 20px;
        overflow-x: auto;
        padding-bottom: 12px;
        scrollbar-width: none;
        -ms-overflow-style: none;
    }
    
    .category-tabs::-webkit-scrollbar {
        display: none;
    }
    
    .tab-item {
        background: rgba(255, 255, 255, 0.05);
        border: 1px solid rgba(255, 255, 255, 0.1);
        color: var(--text-muted, #ABBBC2);
        font-size: 15px;
        padding: 10px 20px;
        border-radius: 12px;
        cursor: pointer;
        white-space: nowrap;
        transition: all 0.3s ease;
    }
    
    .tab-item:hover {
        background: rgba(255, 255, 255, 0.08);
        transform: translateY(-2px);
    }
    
    .tab-item.active {
        background: linear-gradient(45deg, var(--accent-color, #EA7C69), #e96c57);
        color: #fff;
        box-shadow: 0 8px 24px rgba(234, 124, 105, 0.3);
        border: none;
    }
    
    .allergen-filters {
        display: flex;
        gap: 16px;
        flex-wrap: wrap;
        margin-top: 20px;
    }
    
    .allergen-filter {
        display: flex;
        align-items: center;
        gap: 10px;
        background: rgba(255, 255, 255, 0.05);
        border: 1px solid rgba(255, 255, 255, 0.1);
        border-radius: 12px;
        padding: 10px 16px;
        cursor: pointer;
        transition: all 0.3s ease;
    }
    
    .allergen-filter:hover {
        transform: translateY(-2px);
        background: rgba(255, 255, 255, 0.08);
    }
    
    .allergen-filter.excluded {
        background: rgba(255, 59, 59, 0.15);
        border-color: rgba(255, 59, 59, 0.3);
    }
    
    .allergen-filter.excluded .allergen-icon {
        color: #FF3B3B;
    }
    
    .allergen-filter.excluded::after {
        content: '×';
        margin-left: 10px;
        color: #FF3B3B;
        font-weight: bold;
        font-size: 18px;
    }
    
    .allergen-icon {
        color: var(--accent-color, #EA7C69);
        font-size: 18px;
    }
    
    .products-container {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
        gap: 32px;
        margin-bottom: 32px;
    }
    
    .add-dish-card {
        background: linear-gradient(135deg, rgba(234, 124, 105, 0.1), rgba(234, 124, 105, 0.2));
        border: 2px dashed rgba(234, 124, 105, 0.3);
        border-radius: 20px;
        height: 320px;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        transition: all 0.3s ease;
    }
    
    .add-dish-card:hover {
        transform: translateY(-4px);
        box-shadow: 0 12px 32px rgba(234, 124, 105, 0.2);
        border-color: rgba(234, 124, 105, 0.5);
    }
    
    .add-icon {
        width: 70px;
        height: 70px;
        background: rgba(234, 124, 105, 0.15);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        margin-bottom: 20px;
        transition: all 0.3s ease;
    }
    
    .add-dish-card:hover .add-icon {
        transform: scale(1.1);
    }
    
    .add-icon i {
        font-size: 28px;
        color: var(--accent-color, #EA7C69);
    }
    
    .add-dish-card p {
        color: var(--accent-color, #EA7C69);
        font-size: 18px;
        font-weight: 500;
        margin: 0;
    }
    
    .dish-card {
        background: rgba(255, 255, 255, 0.03);
        border-radius: 20px;
        overflow: hidden;
        box-shadow: 0 8px 24px rgba(0, 0, 0, 0.1);
        transition: all 0.3s ease;
        border: 1px solid rgba(255, 255, 255, 0.05);
        backdrop-filter: blur(10px);
    }
    
    .dish-card:hover {
        transform: translateY(-4px);
        box-shadow: 0 12px 32px rgba(0, 0, 0, 0.15);
        border-color: rgba(234, 124, 105, 0.3);
    }
    
    .dish-image-container {
        position: relative;
        height: 180px;
        overflow: hidden;
    }
    
    .dish-image {
        width: 100%;
        height: 100%;
        object-fit: cover;
        transition: transform 0.5s ease;
    }
    
    .dish-card:hover .dish-image {
        transform: scale(1.05);
    }
    
    .dish-details {
        padding: 20px;
    }
    
    .dish-name {
        font-size: 18px;
        font-weight: 600;
        margin: 0 0 12px 0;
        color: var(--text-color, #fff);
    }
    
    .dish-info {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 16px;
    }
    
    .dish-price {
        font-size: 18px;
        font-weight: 600;
        color: var(--accent-color, #EA7C69);
        margin: 0;
    }
    
    .dish-bowls {
        font-size: 15px;
        color: var(--text-muted, #ABBBC2);
        margin: 0;
        display: flex;
        align-items: center;
        gap: 6px;
    }
    
    .dish-bowls::before {
        content: '🍽️';
        font-size: 16px;
    }
    
    .dish-actions {
        display: flex;
        border-top: 1px solid rgba(255, 255, 255, 0.08);
    }
    
    .edit-dish-btn, .view-dish-btn {
        flex: 1;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 8px;
        background: none;
        border: none;
        color: var(--text-color, #fff);
        font-size: 15px;
        padding: 16px;
        cursor: pointer;
        transition: all 0.3s ease;
        text-decoration: none;
    }
    
    .edit-dish-btn {
        border-right: 1px solid rgba(255, 255, 255, 0.08);
    }
    
    .edit-dish-btn:hover, .view-dish-btn:hover {
        background: rgba(255, 255, 255, 0.05);
    }
    
    /* Enhanced Modal styling */
    .modal {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.8);
        z-index: 1000;
        overflow: auto;
        backdrop-filter: blur(8px);
    }
    
    .modal-content {
        background: linear-gradient(135deg, var(--dark-bg-color, #252836) 0%, #1F1D2B 100%);
        margin: 5% auto;
        padding: 0;
        width: 90%;
        max-width: 800px;
        border-radius: 24px;
        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
        animation: modalFadeIn 0.4s ease;
        border: 1px solid rgba(255, 255, 255, 0.1);
    }
    
    .modal-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 24px 32px;
        border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    }
    
    .modal-header h2 {
        margin: 0;
        font-size: 28px;
        font-weight: 600;
        color: var(--text-color, #fff);
        background: linear-gradient(45deg, #fff, #EA7C69);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
    }
    
    .modal-close {
        background: none;
        border: none;
        color: var(--text-muted, #ABBBC2);
        font-size: 28px;
        cursor: pointer;
        padding: 8px;
        border-radius: 50%;
        transition: all 0.3s ease;
    }
    
    .modal-close:hover {
        background: rgba(255, 255, 255, 0.1);
        color: #fff;
    }
    
    .modal-body {
        padding: 32px;
    }
    
    .modal-dish-image {
        position: relative;
        width: 100%;
        height: 240px;
        border-radius: 16px;
        overflow: hidden;
        margin-bottom: 32px;
        box-shadow: 0 8px 24px rgba(0, 0, 0, 0.2);
    }
    
    .modal-dish-image img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        transition: transform 0.5s ease;
    }
    
    .modal-dish-image:hover img {
        transform: scale(1.05);
    }
    
    .modal-dish-badges {
        position: absolute;
        top: 16px;
        right: 16px;
        display: flex;
        flex-direction: column;
        gap: 12px;
    }
    
    .modal-dish-details {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 32px;
    }
    
    .detail-row {
        margin-bottom: 20px;
    }
    
    .detail-label {
        font-weight: 600;
        color: var(--text-muted, #ABBBC2);
        margin-bottom: 8px;
        display: block;
        font-size: 15px;
    }
    
    .detail-value {
        color: var(--text-color, #fff);
        font-size: 16px;
        line-height: 1.5;
    }
    
    .allergen-list {
        display: flex;
        flex-wrap: wrap;
        gap: 12px;
    }
    
    .modal-footer {
        padding: 24px 32px;
        border-top: 1px solid rgba(255, 255, 255, 0.1);
        display: flex;
        justify-content: flex-end;
    }
    
    .btn-edit {
        background: linear-gradient(45deg, var(--accent-color, #EA7C69), #e96c57);
        color: white;
        border: none;
        border-radius: 12px;
        padding: 14px 28px;
        font-weight: 500;
        font-size: 15px;
        cursor: pointer;
        text-decoration: none;
        transition: all 0.3s ease;
        display: flex;
        align-items: center;
        gap: 8px;
    }
    
    .btn-edit:hover {
        transform: translateY(-2px);
        box-shadow: 0 8px 24px rgba(234, 124, 105, 0.3);
    }
    
    .btn-edit::before {
        content: '✏️';
        font-size: 16px;
    }
    
    @@keyframes modalFadeIn {
        from { 
            opacity: 0; 
            transform: translateY(-30px) scale(0.95);
        }
        to { 
            opacity: 1; 
            transform: translateY(0) scale(1);
        }
    }
    
    /* Enhanced Allergen badges styling */
    .allergen-badges {
        display: flex;
        flex-wrap: wrap;
        gap: 8px;
        margin-top: 12px;
    }
    
    .allergen-badge {
        display: inline-flex;
        align-items: center;
        background: rgba(234, 124, 105, 0.1);
        color: var(--text-muted);
        border-radius: 8px;
        padding: 6px 10px;
        font-size: 13px;
        transition: all 0.3s ease;
    }
    
    .allergen-badge:hover {
        background: rgba(234, 124, 105, 0.15);
        transform: translateY(-2px);
    }
    
    .allergen-badge i {
        margin-right: 6px;
        font-size: 16px;
    }
    
    /* Enhanced Dish badges styling */
    .dish-badge {
        position: absolute;
        top: 12px;
        right: 12px;
        padding: 6px 12px;
        border-radius: 8px;
        font-size: 13px;
        font-weight: 500;
        backdrop-filter: blur(4px);
        transition: all 0.3s ease;
    }
    
    .dish-badge.popular {
        background: linear-gradient(45deg, var(--accent-color, #EA7C69), #e96c57);
        color: white;
    }
    
    .dish-badge.vegetarian {
        background: linear-gradient(45deg, #4CAF50, #45a049);
        color: white;
        top: 48px;
    }
    
    /* Responsive improvements */
    @@media (max-width: 768px) {
        .products-management {
            padding: 20px;
        }
        
        .header-section {
            flex-direction: column;
            gap: 20px;
            text-align: center;
        }
        
        .search-bar {
            width: 100%;
        }
        
        .actions-container {
            width: 100%;
            flex-direction: column;
        }
        
        .btn-manage-categories {
            width: 100%;
            justify-content: center;
        }
        
        .modal-content {
            width: 95%;
            margin: 10% auto;
        }
        
        .modal-dish-details {
            grid-template-columns: 1fr;
        }
        
        .modal-header {
            padding: 20px;
        }
        
        .modal-body {
            padding: 20px;
        }
        
        .modal-footer {
            padding: 20px;
        }
    }
</style> 