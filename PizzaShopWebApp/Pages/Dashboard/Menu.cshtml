@page
@model PizzaShopWebApp.Pages.Dashboard.MenuModel
@{
    ViewData["Title"] = "Menu";
    Layout = "_DashboardLayout";
}

<div class="menu-container">
    <div class="menu-header">
        <h1>Menu Management</h1>
        
        <div class="menu-search-filter">
            <form method="get" class="search-form">
                <div class="search-bar">
                    <i class="bx bx-search"></i>
                    <input type="text" name="searchTerm" value="@Model.SearchTerm" placeholder="Search for food items..." />
                </div>
                
                <div class="filter-dropdown">
                    <select name="categoryId" onchange="this.form.submit()">
                        <option value="">All Categories</option>
                        @foreach (var category in Model.Categories)
                        {
                            <option value="@category.Id" selected="@(Model.SelectedCategoryId == category.Id)">@category.Name</option>
                        }
                    </select>
                </div>
                
                <button type="submit" class="search-btn">Search</button>
            </form>
        </div>
    </div>
    
    <div class="menu-tabs">
        <button class="menu-tab @(Model.SelectedCategoryId == null ? "active" : "")" onclick="window.location.href='?'">All</button>
        @foreach (var category in Model.Categories)
        {
            <button class="menu-tab @(Model.SelectedCategoryId == category.Id ? "active" : "")" 
                    onclick="window.location.href='?categoryId=@category.Id'">
                @category.Name
            </button>
        }
    </div>
    
    <div class="menu-items-container">
        @if (Model.MenuItems.Any())
        {
            <table class="menu-table">
                <thead>
                    <tr>
                        <th>Item</th>
                        <th>Category</th>
                        <th>Price</th>
                        <th>Preparation Time</th>
                        <th>Status</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.MenuItems.OrderBy(i => i.FoodCategoryId).ThenBy(i => i.Name))
                    {
                        <tr>
                            <td class="menu-item-cell">
                                <div class="menu-item-info">
                                    <img src="@(string.IsNullOrEmpty(item.ImageUrl) ? "/Images/basic_food_image.png" : item.ImageUrl)" 
                                         alt="@item.Name" class="menu-item-image">
                                    <div>
                                        <h3 class="menu-item-name">@item.Name</h3>
                                        <p class="menu-item-description">@item.Description</p>
                                    </div>
                                </div>
                            </td>
                            <td>@item.FoodCategoryName</td>
                            <td>$@item.Price.ToString("0.00")</td>
                            <td>@(item.PreparationTime.HasValue ? $"{item.PreparationTime} min" : "N/A")</td>
                            <td>
                                <span class="item-status @(item.IsPopular ? "popular" : "available")">
                                    @(item.IsPopular ? "Popular" : "Available")
                                </span>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <div class="no-items-message">
                <p>No menu items found. Please try a different search or category filter.</p>
            </div>
        }
    </div>
</div>

<style>
    .menu-container {
        padding: 20px;
    }
    
    .menu-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
    }
    
    .menu-search-filter {
        display: flex;
        gap: 10px;
    }
    
    .search-form {
        display: flex;
        gap: 10px;
    }
    
    .search-btn {
        background-color: var(--accent-color);
        color: white;
        border: none;
        border-radius: 8px;
        padding: 0 20px;
        cursor: pointer;
    }
    
    .menu-tabs {
        display: flex;
        gap: 10px;
        margin-bottom: 20px;
        overflow-x: auto;
        padding-bottom: 5px;
    }
    
    .menu-tab {
        background-color: var(--secondary-bg-color);
        border: 1px solid var(--border-color);
        border-radius: 8px;
        padding: 10px 20px;
        cursor: pointer;
        white-space: nowrap;
    }
    
    .menu-tab.active {
        background-color: var(--accent-color);
        color: white;
        border-color: var(--accent-color);
    }
    
    .menu-table {
        width: 100%;
        border-collapse: collapse;
    }
    
    .menu-table th {
        text-align: left;
        padding: 15px;
        border-bottom: 1px solid var(--border-color);
    }
    
    .menu-table td {
        padding: 15px;
        border-bottom: 1px solid var(--border-color);
    }
    
    .menu-item-cell {
        min-width: 300px;
    }
    
    .menu-item-info {
        display: flex;
        align-items: center;
        gap: 15px;
    }
    
    .menu-item-image {
        width: 60px;
        height: 60px;
        object-fit: cover;
        border-radius: 8px;
    }
    
    .menu-item-name {
        margin: 0 0 5px 0;
        font-size: 16px;
    }
    
    .menu-item-description {
        margin: 0;
        font-size: 14px;
        color: var(--text-muted);
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
    }
    
    .item-status {
        display: inline-block;
        padding: 5px 10px;
        border-radius: 4px;
        font-size: 14px;
    }
    
    .item-status.popular {
        background-color: rgba(234, 124, 105, 0.2);
        color: var(--accent-color);
    }
    
    .item-status.available {
        background-color: rgba(136, 224, 145, 0.2);
        color: #65D273;
    }
    
    .no-items-message {
        text-align: center;
        padding: 50px;
        color: var(--text-muted);
    }
</style> 