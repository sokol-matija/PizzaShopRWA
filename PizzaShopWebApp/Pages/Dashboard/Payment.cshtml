@page
@model PizzaShopWebApp.Pages.Dashboard.PaymentModel
@{
    ViewData["Title"] = "Payment";
    Layout = "_DashboardLayout";
}

<style>
    /* Main content area */
    .main-content {
        background: linear-gradient(135deg, var(--dark-bg-color, #252836) 0%, #1F1D2B 100%);
        min-height: 100vh;
        position: relative;
        width: 100%;
    }
    
    /* Payment Container */
    .payment-container {
        padding: 24px;
        font-family: 'Poppins', sans-serif;
        animation: fadeInUp 0.6s ease;
    }
    
    /* Payment Header to match Menu page style */
    .payment-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 32px;
        background: rgba(255, 255, 255, 0.03);
        padding: 24px;
        border-radius: 16px;
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.05);
    }
    
    .header-content h1 {
        font-size: 32px;
        font-weight: 600;
        margin: 0 0 8px 0;
        background: linear-gradient(45deg, #fff, #EA7C69);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
    }
    
    .header-content p {
        color: var(--text-muted, #ABBBC2);
        margin: 0;
    }
    
    /* Checkout Steps */
    .checkout-steps {
        display: flex;
        align-items: center;
    }
    
    .step {
        display: flex;
        flex-direction: column;
        align-items: center;
        position: relative;
    }
    
    .step-icon {
        width: 40px;
        height: 40px;
        background-color: rgba(255, 255, 255, 0.1);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        margin-bottom: 8px;
        color: var(--text-muted, #ABBBC2);
        font-size: 18px;
        transition: all 0.3s ease;
    }
    
    .step-label {
        font-size: 12px;
        color: var(--text-muted, #ABBBC2);
        transition: all 0.3s ease;
    }
    
    .step.completed .step-icon {
        background-color: rgba(46, 204, 113, 0.2);
        color: #2ECC71;
    }
    
    .step.active .step-icon {
        background-color: rgba(234, 124, 105, 0.2);
        color: var(--accent-color, #EA7C69);
        transform: scale(1.1);
    }
    
    .step.completed .step-label,
    .step.active .step-label {
        color: var(--text-color, #fff);
    }
    
    .step-connector {
        height: 2px;
        width: 60px;
        background-color: rgba(255, 255, 255, 0.1);
        margin: 0 8px;
        position: relative;
        top: -12px;
        transition: all 0.3s ease;
    }
    
    .step-connector.completed {
        background-color: #2ECC71;
    }
    
    /* Payment Content */
    .payment-content {
        display: flex;
        gap: 24px;
    }
    
    .payment-left {
        flex: 1;
    }
    
    .payment-right {
        width: 320px;
    }
    
    /* Form Sections styling to match Menu page */
    .form-section {
        background: rgba(255, 255, 255, 0.03);
        border-radius: 20px;
        padding: 24px;
        margin-bottom: 24px;
        border: 1px solid rgba(255, 255, 255, 0.05);
        backdrop-filter: blur(10px);
        transition: all 0.3s ease;
    }
    
    .form-section:hover {
        transform: translateY(-5px);
        box-shadow: 0 8px 24px rgba(234, 124, 105, 0.2);
        border-color: rgba(234, 124, 105, 0.5);
    }
    
    .form-section h2 {
        font-size: 18px;
        font-weight: 600;
        margin: 0 0 20px 0;
        color: var(--text-color, #fff);
    }
    
    /* Payment Methods styling to match Menu aesthetic */
    .payment-methods {
        display: flex;
        gap: 16px;
    }
    
    .payment-method {
        flex: 1;
        position: relative;
        cursor: pointer;
        transition: all 0.3s ease;
    }
    
    .payment-method input[type="radio"] {
        position: absolute;
        opacity: 0;
    }
    
    .payment-method label {
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 12px;
        padding: 16px;
        background-color: rgba(255, 255, 255, 0.05);
        border: 1px solid rgba(255, 255, 255, 0.1);
        border-radius: 12px;
        transition: all 0.3s ease;
        text-align: center;
    }
    
    .payment-method label i {
        font-size: 24px;
        color: var(--text-muted, #ABBBC2);
        transition: all 0.3s ease;
    }
    
    .payment-method:hover label {
        transform: translateY(-4px);
        background-color: rgba(255, 255, 255, 0.08);
    }
    
    .payment-method.active label {
        background-color: rgba(234, 124, 105, 0.1);
        border-color: var(--accent-color, #EA7C69);
        transform: translateY(-4px);
    }
    
    .payment-method.active label i,
    .payment-method.active label span {
        color: var(--accent-color, #EA7C69);
    }
    
    /* Credit Card Visual */
    .credit-card-visual {
        margin-bottom: 24px;
    }
    
    .card-front {
        height: 200px;
        background: linear-gradient(135deg, #4a4fe1, #8f7be8);
        border-radius: 16px;
        padding: 24px;
        position: relative;
        box-shadow: 0 8px 24px rgba(0, 0, 0, 0.2);
        overflow: hidden;
        transition: all 0.5s ease;
    }
    
    .card-front:hover {
        transform: translateY(-5px);
        box-shadow: 0 12px 32px rgba(74, 79, 225, 0.4);
    }
    
    .card-type {
        display: flex;
        justify-content: flex-end;
        margin-bottom: 30px;
    }
    
    .card-type i {
        font-size: 32px;
        color: white;
    }
    
    .card-type i.hidden {
        display: none;
    }
    
    .card-number {
        font-size: 22px;
        letter-spacing: 2px;
        color: white;
        margin-bottom: 30px;
        font-family: 'Courier New', monospace;
    }
    
    .card-details {
        display: flex;
        justify-content: space-between;
        color: white;
    }
    
    .card-holder, .card-expiry {
        color: rgba(255, 255, 255, 0.8);
    }
    
    .label {
        font-size: 10px;
        text-transform: uppercase;
        letter-spacing: 1px;
        margin-bottom: 5px;
    }
    
    .value {
        font-size: 14px;
        letter-spacing: 1px;
    }
    
    /* Form Elements styling to match Menu page */
    .form-row {
        display: flex;
        gap: 16px;
        margin-bottom: 16px;
    }
    
    .form-group {
        flex: 1;
    }
    
    .form-group.full {
        width: 100%;
    }
    
    .form-group.half {
        width: 50%;
    }
    
    .form-group label {
        display: block;
        font-size: 14px;
        color: var(--text-color, #fff);
        margin-bottom: 8px;
    }
    
    .form-group input,
    .form-group textarea {
        width: 100%;
        padding: 12px 16px;
        background-color: rgba(255, 255, 255, 0.05);
        border: 1px solid rgba(255, 255, 255, 0.1);
        border-radius: 12px;
        color: var(--text-color, #fff);
        font-size: 14px;
        transition: all 0.3s ease;
    }
    
    .form-group input:focus,
    .form-group textarea:focus {
        border-color: var(--accent-color, #EA7C69);
        outline: none;
        box-shadow: 0 0 0 3px rgba(234, 124, 105, 0.25);
        transform: translateY(-2px);
    }
    
    /* Order Summary styling to match Menu page */
    .order-summary-card {
        background: rgba(255, 255, 255, 0.03);
        border-radius: 20px;
        padding: 24px;
        border: 1px solid rgba(255, 255, 255, 0.05);
        backdrop-filter: blur(10px);
        transition: all 0.3s ease;
    }
    
    .order-summary-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 8px 24px rgba(234, 124, 105, 0.2);
        border-color: rgba(234, 124, 105, 0.5);
    }
    
    .order-summary-card h2 {
        font-size: 18px;
        font-weight: 600;
        margin: 0 0 20px 0;
        color: var(--text-color, #fff);
    }
    
    /* Action Buttons styling to match Menu page */
    .payment-actions {
        display: flex;
        justify-content: space-between;
        margin-top: 32px;
    }
    
    .back-btn {
        display: flex;
        align-items: center;
        gap: 8px;
        background: linear-gradient(45deg, rgba(255, 255, 255, 0.05), rgba(255, 255, 255, 0.1));
        border: 1px solid rgba(255, 255, 255, 0.1);
        color: var(--text-color, #fff);
        padding: 12px 24px;
        border-radius: 12px;
        cursor: pointer;
        transition: all 0.3s ease;
        text-decoration: none;
    }
    
    .back-btn:hover {
        transform: translateY(-2px);
        background-color: rgba(255, 255, 255, 0.1);
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    }
    
    .confirm-btn {
        display: flex;
        align-items: center;
        gap: 8px;
        background: linear-gradient(45deg, var(--accent-color, #EA7C69), #e96c57);
        color: white;
        border: none;
        padding: 12px 24px;
        border-radius: 12px;
        cursor: pointer;
        font-weight: 500;
        transition: all 0.3s ease;
        box-shadow: 0 8px 24px rgba(234, 124, 105, 0.3);
    }
    
    .confirm-btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 12px 32px rgba(234, 124, 105, 0.4);
    }
    
    /* Success Modal styling to match Menu page */
    .modal {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: rgba(0, 0, 0, 0.8);
        z-index: 1000;
        justify-content: center;
        align-items: center;
        backdrop-filter: blur(8px);
    }
    
    .modal-content {
        background: rgba(255, 255, 255, 0.03);
        padding: 48px;
        border-radius: 20px;
        text-align: center;
        width: 90%;
        max-width: 500px;
        box-shadow: 0 16px 40px rgba(0, 0, 0, 0.3);
        border: 1px solid rgba(255, 255, 255, 0.05);
        backdrop-filter: blur(10px);
        animation: modalFadeIn 0.4s ease;
    }
    
    /* Animations */
    @@keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(20px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }
    
    @@keyframes modalFadeIn {
        from { 
            opacity: 0; 
            transform: translateY(-30px) scale(0.95);
        }
        to { 
            opacity: 1; 
            transform: translateY(0) scale(1);
        }
    }
</style>

<div class="payment-container">
    <div class="payment-header">
        <div class="header-content">
            <h1>Payment</h1>
            <p>Complete your order by providing payment details</p>
        </div>
        <div class="checkout-steps">
            <div class="step completed">
                <div class="step-icon">
                    <i class='bx bx-cart-alt'></i>
                </div>
                <div class="step-label">Cart</div>
            </div>
            <div class="step-connector completed"></div>
            <div class="step active">
                <div class="step-icon">
                    <i class='bx bx-credit-card'></i>
                </div>
                <div class="step-label">Payment</div>
            </div>
            <div class="step-connector"></div>
            <div class="step">
                <div class="step-icon">
                    <i class='bx bx-check-circle'></i>
                </div>
                <div class="step-label">Confirmation</div>
            </div>
        </div>
    </div>
    
    <div class="payment-content">
        <div class="payment-left">
            <form method="post" asp-page-handler="Checkout" id="paymentForm">
                <div class="form-section payment-methods-section">
                    <h2>Payment Method</h2>
                    <div class="payment-methods">
                        <div class="payment-method active">
                            <input type="radio" id="creditCard" name="PaymentMethod" value="Credit Card" checked>
                            <label for="creditCard">
                                <i class='bx bx-credit-card'></i>
                                <span>Credit Card</span>
                            </label>
                        </div>
                        <div class="payment-method">
                            <input type="radio" id="paypal" name="PaymentMethod" value="PayPal">
                            <label for="paypal">
                                <i class='bx bxl-paypal'></i>
                                <span>PayPal</span>
                            </label>
                        </div>
                        <div class="payment-method">
                            <input type="radio" id="cash" name="PaymentMethod" value="Cash">
                            <label for="cash">
                                <i class='bx bx-money'></i>
                                <span>Cash on Delivery</span>
                            </label>
                        </div>
                    </div>
                </div>
                
                <div class="form-section" id="creditCardForm">
                    <h2>Card Details</h2>
                    <div class="credit-card-visual">
                        <div class="card-front">
                            <div class="card-type">
                                <i class='bx bxl-visa'></i>
                                <i class='bx bxl-mastercard hidden'></i>
                                <i class='bx bxl-american-express hidden'></i>
                            </div>
                            <div class="card-number" id="cardNumberDisplay">•••• •••• •••• ••••</div>
                            <div class="card-details">
                                <div class="card-holder">
                                    <div class="label">Card Holder</div>
                                    <div class="value" id="cardNameDisplay">YOUR NAME</div>
                                </div>
                                <div class="card-expiry">
                                    <div class="label">Expires</div>
                                    <div class="value" id="expiryDateDisplay">MM/YY</div>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <div class="form-row">
                        <div class="form-group full">
                            <label for="cardName">Cardholder Name</label>
                            <input type="text" id="cardName" placeholder="John Smith" oninput="updateCardDisplay()">
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group full">
                            <label for="cardNumber">Card Number</label>
                            <input type="text" id="cardNumber" placeholder="1234 5678 9012 3456" maxlength="19" oninput="formatCardNumber(this); updateCardDisplay()">
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group half">
                            <label for="expiryDate">Expiry Date</label>
                            <input type="text" id="expiryDate" placeholder="MM/YY" maxlength="5" oninput="formatExpiryDate(this); updateCardDisplay()">
                        </div>
                        <div class="form-group half">
                            <label for="cvv">CVV</label>
                            <input type="text" id="cvv" placeholder="123" maxlength="3">
                        </div>
                    </div>
                </div>
                
                <div class="form-section">
                    <h2>Delivery Information</h2>
                    <div class="form-row">
                        <div class="form-group full">
                            <label for="deliveryAddress">Delivery Address</label>
                            <textarea id="deliveryAddress" name="DeliveryAddress" rows="3" required>@Model.DeliveryAddress</textarea>
                            <span asp-validation-for="DeliveryAddress" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group full">
                            <label for="deliveryNotes">Delivery Notes (Optional)</label>
                            <textarea id="deliveryNotes" name="DeliveryNotes" rows="2" placeholder="Special instructions for delivery..."></textarea>
                        </div>
                    </div>
                </div>
                
                <div class="payment-actions">
                    <a href="/Dashboard/Order" class="back-btn">
                        <i class='bx bx-arrow-back'></i>
                        Back to Order
                    </a>
                    <button type="submit" class="confirm-btn">
                        <i class='bx bx-check'></i>
                        Confirm Payment
                    </button>
                </div>
            </form>
        </div>
        
        <div class="payment-right">
            <div class="order-summary-card">
                <h2>Order Summary</h2>
                
                <div class="order-items">
                    @foreach (var item in Model.CartItems)
                    {
                        <div class="order-item">
                            <div class="item-info">
                                <div class="item-quantity">@item.Quantity×</div>
                                <div class="item-name">@item.Name</div>
                            </div>
                            <div class="item-price">$@((item.Price * item.Quantity).ToString("0.00"))</div>
                        </div>
                    }
                </div>
                
                <div class="order-totals">
                    <div class="total-row">
                        <span>Subtotal</span>
                        <span>$@Model.Subtotal.ToString("0.00")</span>
                    </div>
                    <div class="total-row">
                        <span>Tax (8%)</span>
                        <span>$@Model.Tax.ToString("0.00")</span>
                    </div>
                    <div class="total-row">
                        <span>Delivery Fee</span>
                        <span>$@Model.DeliveryFee.ToString("0.00")</span>
                    </div>
                    <div class="total-row discount">
                        <span>Promo <span class="promo-code">WELCOME10</span></span>
                        <span>-$@((Model.Subtotal * 0.1m).ToString("0.00"))</span>
                    </div>
                    <div class="total-row grand-total">
                        <span>Total</span>
                        <span>$@((Model.Total - (Model.Subtotal * 0.1m)).ToString("0.00"))</span>
                    </div>
                </div>
                
                <div class="estimated-delivery">
                    <div class="delivery-icon">
                        <i class='bx bx-time'></i>
                    </div>
                    <div class="delivery-info">
                        <span class="delivery-label">Estimated Delivery</span>
                        <span class="delivery-time">@DateTime.Now.AddMinutes(30).ToString("h:mm tt") - @DateTime.Now.AddMinutes(45).ToString("h:mm tt")</span>
                    </div>
                </div>
                
                <div class="promo-code-input">
                    <input type="text" placeholder="Promo code" value="WELCOME10" disabled>
                    <button disabled>Applied</button>
                </div>
            </div>
            
            <div class="secure-payment-note">
                <i class='bx bx-lock-alt'></i>
                <span>Secure Payment Processing</span>
            </div>
        </div>
    </div>
</div>

<div id="payment-success-modal" class="modal">
    <div class="modal-content">
        <div class="success-animation">
            <svg class="checkmark" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 52 52">
                <circle class="checkmark-circle" cx="26" cy="26" r="25" fill="none" />
                <path class="checkmark-check" fill="none" d="M14.1 27.2l7.1 7.2 16.7-16.8" />
            </svg>
        </div>
        <h2>Payment Successful!</h2>
        <p>Your order has been placed and will be delivered soon.</p>
        <p class="order-number">Order #<span id="orderNumberDisplay">12345</span></p>
        <a href="/Dashboard/Index" class="return-home-btn">Return to Dashboard</a>
    </div>
</div>

@if (!string.IsNullOrEmpty(TempData["ErrorMessage"]?.ToString()))
{
    <div class="alert alert-danger">
        @TempData["ErrorMessage"]
    </div>
}

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Add animations to form sections
            const formSections = document.querySelectorAll('.form-section');
            formSections.forEach((section, index) => {
                section.style.opacity = '0';
                section.style.transform = 'translateY(20px)';
                setTimeout(() => {
                    section.style.opacity = '1';
                    section.style.transform = 'translateY(0)';
                    section.style.transition = 'all 0.3s ease';
                }, 100 * (index + 1));
            });
            
            // Handle payment method selection
            const paymentMethods = document.querySelectorAll('.payment-method');
            const creditCardForm = document.getElementById('creditCardForm');
            
            paymentMethods.forEach(method => {
                method.addEventListener('click', function() {
                    // Remove active class from all methods
                    paymentMethods.forEach(m => m.classList.remove('active'));
                    // Add active class to clicked method
                    this.classList.add('active');
                    
                    // Check the radio button
                    const radio = this.querySelector('input[type="radio"]');
                    radio.checked = true;
                    
                    // Show/hide credit card form
                    if (radio.id === 'creditCard') {
                        creditCardForm.style.display = 'block';
                    } else {
                        creditCardForm.style.display = 'none';
                    }
                });
            });
            
            // Handle form submission (simulate payment)
            const paymentForm = document.getElementById('paymentForm');
            paymentForm.addEventListener('submit', function(e) {
                // For demo purposes only - in reality, this would be handled server-side
                if (document.getElementById('creditCard').checked) {
                    const cardName = document.getElementById('cardName').value;
                    const cardNumber = document.getElementById('cardNumber').value;
                    const expiryDate = document.getElementById('expiryDate').value;
                    const cvv = document.getElementById('cvv').value;
                    
                    if (!cardName || !cardNumber || !expiryDate || !cvv) {
                        e.preventDefault();
                        alert('Please fill out all card details');
                        return;
                    }
                }
                
                // Show success animation if everything is valid
                // In a real app, this would happen after server response
                if (document.getElementById('deliveryAddress').value) {
                    //e.preventDefault(); // Uncomment for demo without backend
                    //showPaymentSuccessModal(); // Uncomment for demo without backend
                }
            });
            
            // Check for success message in URL (after redirect from server)
            const urlParams = new URLSearchParams(window.location.search);
            if (urlParams.has('success') && urlParams.get('success') === 'true') {
                const orderNumber = urlParams.get('orderNumber') || '12345';
                document.getElementById('orderNumberDisplay').textContent = orderNumber;
                showPaymentSuccessModal();
            }
        });
        
        // Function to format card number with spaces
        function formatCardNumber(input) {
            // Remove any non-digit characters
            let value = input.value.replace(/\D/g, '');
            
            // Add spaces after every 4 digits
            let formattedValue = '';
            for (let i = 0; i < value.length; i++) {
                if (i > 0 && i % 4 === 0) {
                    formattedValue += ' ';
                }
                formattedValue += value[i];
            }
            
            input.value = formattedValue;
            
            // Determine card type
            const cardType = document.querySelectorAll('.card-type i');
            cardType.forEach(icon => icon.classList.add('hidden'));
            
            if (value.startsWith('4')) {
                document.querySelector('.bxl-visa').classList.remove('hidden');
            } else if (value.startsWith('5')) {
                document.querySelector('.bxl-mastercard').classList.remove('hidden');
            } else if (value.startsWith('3')) {
                document.querySelector('.bxl-american-express').classList.remove('hidden');
            }
        }
        
        // Function to format expiry date as MM/YY
        function formatExpiryDate(input) {
            let value = input.value.replace(/\D/g, '');
            
            if (value.length > 2) {
                value = value.substring(0, 2) + '/' + value.substring(2);
            }
            
            input.value = value;
        }
        
        // Function to update the card display
        function updateCardDisplay() {
            const cardName = document.getElementById('cardName').value;
            const cardNumber = document.getElementById('cardNumber').value;
            const expiryDate = document.getElementById('expiryDate').value;
            
            document.getElementById('cardNameDisplay').textContent = cardName || 'YOUR NAME';
            
            if (cardNumber) {
                document.getElementById('cardNumberDisplay').textContent = cardNumber;
            } else {
                document.getElementById('cardNumberDisplay').textContent = '•••• •••• •••• ••••';
            }
            
            if (expiryDate) {
                document.getElementById('expiryDateDisplay').textContent = expiryDate;
            } else {
                document.getElementById('expiryDateDisplay').textContent = 'MM/YY';
            }
        }
        
        // Show payment success modal
        function showPaymentSuccessModal() {
            const modal = document.getElementById('payment-success-modal');
            modal.style.display = 'flex';
            
            // Prevent closing - it's a final confirmation
            // Add a timeout to allow redirect in a real app
            setTimeout(() => {
                window.location.href = '/Dashboard/Index';
            }, 5000);
        }
    </script>
} 