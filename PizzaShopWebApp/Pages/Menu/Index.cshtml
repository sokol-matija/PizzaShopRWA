@page
@model PizzaShopWebApp.Pages.Menu.IndexModel
@{
    ViewData["Title"] = "Our Menu";
}

<div class="container fade-in">
    <div class="row mb-4">
        <div class="col-12">
            <h2 class="mb-4">Our Menu</h2>
            <p class="text-muted">Explore our delicious selection of handcrafted pizzas, made with fresh ingredients.</p>
        </div>
    </div>

    <!-- Category Tabs -->
    <ul class="nav nav-pills menu-tabs mb-4" id="menuTabs" role="tablist">
        <li class="nav-item" role="presentation">
            <button class="nav-link active" id="pizzas-tab" data-bs-toggle="pill" data-bs-target="#pizzas" type="button" role="tab" aria-controls="pizzas" aria-selected="true">
                <i class='bx bx-pizza'></i> Pizzas
            </button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link" id="sides-tab" data-bs-toggle="pill" data-bs-target="#sides" type="button" role="tab" aria-controls="sides" aria-selected="false">
                <i class='bx bx-bowl-hot'></i> Sides
            </button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link" id="drinks-tab" data-bs-toggle="pill" data-bs-target="#drinks" type="button" role="tab" aria-controls="drinks" aria-selected="false">
                <i class='bx bx-drink'></i> Drinks
            </button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link" id="desserts-tab" data-bs-toggle="pill" data-bs-target="#desserts" type="button" role="tab" aria-controls="desserts" aria-selected="false">
                <i class='bx bx-cookie'></i> Desserts
            </button>
        </li>
    </ul>

    <!-- Tab Content -->
    <div class="tab-content" id="menuTabContent">
        <!-- Pizzas Tab -->
        <div class="tab-pane fade show active" id="pizzas" role="tabpanel" aria-labelledby="pizzas-tab">
            <div class="row">
                @foreach (var pizza in Model.Pizzas)
                {
                    <div class="col-md-6 col-lg-4 mb-4">
                        <div class="card menu-item">
                            <div class="card-img-wrapper">
                                <img src="@pizza.ImageUrl" class="card-img-top" alt="@pizza.Name">
                                @if (pizza.IsPopular)
                                {
                                    <span class="badge popular-badge">Popular</span>
                                }
                                @if (pizza.IsVegetarian)
                                {
                                    <span class="badge veg-badge">Vegetarian</span>
                                }
                            </div>
                            <div class="card-body">
                                <div class="d-flex justify-content-between align-items-start mb-2">
                                    <h5 class="card-title mb-0">@pizza.Name</h5>
                                    <span class="price">$@pizza.Price.ToString("0.00")</span>
                                </div>
                                <p class="card-text text-muted">@pizza.Description</p>
                                <div class="d-flex justify-content-between align-items-center mt-3">
                                    <button class="btn btn-sm btn-outline-primary" data-bs-toggle="modal" data-bs-target="#customizeModal" data-pizza-id="@pizza.Id">
                                        <i class='bx bx-edit'></i> Customize
                                    </button>
                                    <button class="btn btn-sm btn-primary add-to-cart" data-item-id="@pizza.Id" data-item-name="@pizza.Name" data-item-price="@pizza.Price">
                                        <i class='bx bx-cart-add'></i> Add to Cart
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>

        <!-- Sides Tab -->
        <div class="tab-pane fade" id="sides" role="tabpanel" aria-labelledby="sides-tab">
            <div class="row">
                @foreach (var side in Model.Sides)
                {
                    <div class="col-md-6 col-lg-4 mb-4">
                        <div class="card menu-item">
                            <div class="card-img-wrapper">
                                <img src="@side.ImageUrl" class="card-img-top" alt="@side.Name">
                                @if (side.IsPopular)
                                {
                                    <span class="badge popular-badge">Popular</span>
                                }
                            </div>
                            <div class="card-body">
                                <div class="d-flex justify-content-between align-items-start mb-2">
                                    <h5 class="card-title mb-0">@side.Name</h5>
                                    <span class="price">$@side.Price.ToString("0.00")</span>
                                </div>
                                <p class="card-text text-muted">@side.Description</p>
                                <div class="d-flex justify-content-end align-items-center mt-3">
                                    <button class="btn btn-sm btn-primary add-to-cart" data-item-id="@side.Id" data-item-name="@side.Name" data-item-price="@side.Price">
                                        <i class='bx bx-cart-add'></i> Add to Cart
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>

        <!-- Drinks Tab -->
        <div class="tab-pane fade" id="drinks" role="tabpanel" aria-labelledby="drinks-tab">
            <div class="row">
                @foreach (var drink in Model.Drinks)
                {
                    <div class="col-md-6 col-lg-4 mb-4">
                        <div class="card menu-item">
                            <div class="card-img-wrapper">
                                <img src="@drink.ImageUrl" class="card-img-top" alt="@drink.Name">
                            </div>
                            <div class="card-body">
                                <div class="d-flex justify-content-between align-items-start mb-2">
                                    <h5 class="card-title mb-0">@drink.Name</h5>
                                    <span class="price">$@drink.Price.ToString("0.00")</span>
                                </div>
                                <p class="card-text text-muted">@drink.Description</p>
                                <div class="d-flex justify-content-end align-items-center mt-3">
                                    <button class="btn btn-sm btn-primary add-to-cart" data-item-id="@drink.Id" data-item-name="@drink.Name" data-item-price="@drink.Price">
                                        <i class='bx bx-cart-add'></i> Add to Cart
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>

        <!-- Desserts Tab -->
        <div class="tab-pane fade" id="desserts" role="tabpanel" aria-labelledby="desserts-tab">
            <div class="row">
                @foreach (var dessert in Model.Desserts)
                {
                    <div class="col-md-6 col-lg-4 mb-4">
                        <div class="card menu-item">
                            <div class="card-img-wrapper">
                                <img src="@dessert.ImageUrl" class="card-img-top" alt="@dessert.Name">
                                @if (dessert.IsPopular)
                                {
                                    <span class="badge popular-badge">Popular</span>
                                }
                            </div>
                            <div class="card-body">
                                <div class="d-flex justify-content-between align-items-start mb-2">
                                    <h5 class="card-title mb-0">@dessert.Name</h5>
                                    <span class="price">$@dessert.Price.ToString("0.00")</span>
                                </div>
                                <p class="card-text text-muted">@dessert.Description</p>
                                <div class="d-flex justify-content-end align-items-center mt-3">
                                    <button class="btn btn-sm btn-primary add-to-cart" data-item-id="@dessert.Id" data-item-name="@dessert.Name" data-item-price="@dessert.Price">
                                        <i class='bx bx-cart-add'></i> Add to Cart
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<!-- Customize Pizza Modal -->
<div class="modal fade" id="customizeModal" tabindex="-1" aria-labelledby="customizeModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="customizeModalLabel">Customize Your Pizza</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="customizeForm">
                    <input type="hidden" id="pizzaId" name="pizzaId" value="">
                    
                    <!-- Size Selection -->
                    <div class="mb-3">
                        <label class="form-label">Size</label>
                        <div class="btn-group size-selector w-100" role="group">
                            <input type="radio" class="btn-check" name="size" id="sizeSmall" value="small" checked>
                            <label class="btn btn-outline-primary" for="sizeSmall">Small</label>
                            
                            <input type="radio" class="btn-check" name="size" id="sizeMedium" value="medium">
                            <label class="btn btn-outline-primary" for="sizeMedium">Medium</label>
                            
                            <input type="radio" class="btn-check" name="size" id="sizeLarge" value="large">
                            <label class="btn btn-outline-primary" for="sizeLarge">Large</label>
                        </div>
                    </div>
                    
                    <!-- Crust Selection -->
                    <div class="mb-3">
                        <label class="form-label">Crust</label>
                        <select class="form-select" id="crust" name="crust">
                            <option value="thin">Thin Crust</option>
                            <option value="traditional" selected>Traditional</option>
                            <option value="thick">Thick Crust</option>
                            <option value="stuffed">Cheese Stuffed Crust</option>
                        </select>
                    </div>
                    
                    <!-- Extra Toppings -->
                    <div class="mb-3">
                        <label class="form-label">Extra Toppings ($1.50 each)</label>
                        <div class="toppings-grid">
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" name="toppings" value="cheese" id="toppingCheese">
                                <label class="form-check-label" for="toppingCheese">Extra Cheese</label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" name="toppings" value="pepperoni" id="toppingPepperoni">
                                <label class="form-check-label" for="toppingPepperoni">Pepperoni</label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" name="toppings" value="mushrooms" id="toppingMushrooms">
                                <label class="form-check-label" for="toppingMushrooms">Mushrooms</label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" name="toppings" value="onions" id="toppingOnions">
                                <label class="form-check-label" for="toppingOnions">Onions</label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" name="toppings" value="olives" id="toppingOlives">
                                <label class="form-check-label" for="toppingOlives">Black Olives</label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" name="toppings" value="bellPeppers" id="toppingBellPeppers">
                                <label class="form-check-label" for="toppingBellPeppers">Bell Peppers</label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" name="toppings" value="bacon" id="toppingBacon">
                                <label class="form-check-label" for="toppingBacon">Bacon</label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" name="toppings" value="ham" id="toppingHam">
                                <label class="form-check-label" for="toppingHam">Ham</label>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Special Instructions -->
                    <div class="mb-3">
                        <label for="specialInstructions" class="form-label">Special Instructions</label>
                        <textarea class="form-control" id="specialInstructions" name="specialInstructions" rows="2" placeholder="Any special requests?"></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <span class="me-auto" id="customTotalPrice">Total: $12.99</span>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="addCustomPizza">Add to Cart</button>
            </div>
        </div>
    </div>
</div>

<!-- Added to Cart Toast Notification -->
<div class="position-fixed bottom-0 end-0 p-3" style="z-index: 5">
    <div id="cartToast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="toast-header">
            <i class='bx bx-check-circle text-success me-2'></i>
            <strong class="me-auto">Item Added</strong>
            <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
        <div class="toast-body">
            <span id="toastMessage">Item added to your cart!</span>
            <div class="mt-2 pt-2 border-top">
                <a href="/Cart/Index" class="btn btn-sm btn-primary">View Cart</a>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Handle customization modal
        const customizeModal = document.getElementById('customizeModal');
        if (customizeModal) {
            customizeModal.addEventListener('show.bs.modal', function (event) {
                const button = event.relatedTarget;
                const pizzaId = button.getAttribute('data-pizza-id');
                document.getElementById('pizzaId').value = pizzaId;
                updateCustomPrice();
            });
        }
        
        // Calculate and update custom pizza price
        function updateCustomPrice() {
            let basePrice = 10.99;
            const size = document.querySelector('input[name="size"]:checked').value;
            if (size === 'medium') basePrice += 2;
            if (size === 'large') basePrice += 4;
            
            const crust = document.getElementById('crust').value;
            if (crust === 'stuffed') basePrice += 2;
            
            const toppings = document.querySelectorAll('input[name="toppings"]:checked');
            basePrice += toppings.length * 1.5;
            
            document.getElementById('customTotalPrice').textContent = `Total: $${basePrice.toFixed(2)}`;
        }
        
        // Update price when options change
        document.querySelectorAll('input[name="size"]').forEach(input => {
            input.addEventListener('change', updateCustomPrice);
        });
        
        document.getElementById('crust')?.addEventListener('change', updateCustomPrice);
        
        document.querySelectorAll('input[name="toppings"]').forEach(input => {
            input.addEventListener('change', updateCustomPrice);
        });
        
        // Add custom pizza to cart
        document.getElementById('addCustomPizza')?.addEventListener('click', function() {
            const form = document.getElementById('customizeForm');
            const formData = new FormData(form);
            const selectedToppings = Array.from(formData.getAll('toppings')).join(', ');
            const size = formData.get('size');
            const crust = formData.get('crust');
            
            const customizations = [];
            if (size) customizations.push(size.charAt(0).toUpperCase() + size.slice(1));
            if (crust) customizations.push(crust.charAt(0).toUpperCase() + crust.slice(1) + ' Crust');
            if (selectedToppings) customizations.push('Extra: ' + selectedToppings);
            
            const totalPrice = parseFloat(document.getElementById('customTotalPrice').textContent.replace('Total: $', ''));
            
            // Here you would add to your cart via API or local storage
            showToast('Custom pizza added to your cart!');
            
            const modal = bootstrap.Modal.getInstance(document.getElementById('customizeModal'));
            modal.hide();
        });
        
        // Add to cart function for regular items
        document.querySelectorAll('.add-to-cart').forEach(button => {
            button.addEventListener('click', function() {
                const itemId = this.getAttribute('data-item-id');
                const itemName = this.getAttribute('data-item-name');
                const itemPrice = this.getAttribute('data-item-price');
                
                // Here you would add to your cart via API or local storage
                showToast(`${itemName} added to your cart!`);
            });
        });
        
        // Show toast notification
        function showToast(message) {
            document.getElementById('toastMessage').textContent = message;
            const toast = new bootstrap.Toast(document.getElementById('cartToast'));
            toast.show();
        }
    </script>
} 