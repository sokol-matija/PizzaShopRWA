@{
    var username = Context.Session.GetString("Username") ?? "Guest";
    var isAdmin = Context.Session.GetString("IsAdmin") == "True";
}
<!DOCTYPE html>
<html lang="en">

<head>
    <style>
        body { visibility: hidden; }
        html.sidebar-ready body { visibility: visible; }
    </style>
    <script>
        // Hide body until sidebar state is applied
        document.documentElement.classList.add(
            localStorage.getItem('sidebarExpanded') === 'true' 
            ? 'sidebar-expanded-page' 
            : 'sidebar-collapsed-page'
        );
        
        window.addEventListener('DOMContentLoaded', function() {
            requestAnimationFrame(function() {
                document.documentElement.classList.add('sidebar-ready');
            });
        });
    </script>
    <style>
        html.sidebar-expanded-page .sidebar {
            width: 250px !important;
        }
        html.sidebar-expanded-page .main-content {
            margin-left: 250px !important;
            width: calc(100% - 250px) !important;
        }
    </style>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Jaegar Resto</title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link href='https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css' rel='stylesheet'>
    <link rel="stylesheet" href="~/css/dashboard.css" asp-append-version="true" />
    <style>
        :root {
            --primary-color: #EA7C69;
            --primary-hover: #f68d7a;
            --primary-light: rgba(234, 124, 105, 0.2);
            --accent-color: #EA7C69;
            --accent-hover: #d46c5a;
            --dark-bg-color: #252836;
            --secondary-bg-color: #1F1D2B;
            --border-color: rgba(255, 255, 255, 0.08);
            --text-color: #fff;
            --text-muted: #ABBBC2;
            --success-color: #2ECC71;
            --error-color: #E74C3C;
            --warning-color: #FFAA00;
            --info-color: #4189E6;
            --sidebar-width: 250px;
            --sidebar-collapsed-width: 104px;
            --transition-speed: 0.3s;
            --card-border-radius: 16px;
        }

        body {
            font-family: 'Poppins', sans-serif;
            background-color: var(--dark-bg-color);
            color: var(--text-color);
            margin: 0;
            min-height: 100vh;
            transition: all var(--transition-speed) ease;
        }

        .dashboard-page {
            display: flex;
            min-height: 100vh;
        }

        /* Modern Sidebar with Glass Morphism */
        .sidebar {
            position: fixed;
            top: 0;
            bottom: 0;
            left: 0;
            background-color: var(--secondary-bg-color);
            width: var(--sidebar-width);
            transition: width 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            z-index: 99;
            overflow: visible; /* Allow toggle button to be visible outside sidebar */
            display: flex;
            flex-direction: column;
            padding-bottom: 10px; /* Add bottom padding to prevent scrollbar on hover */
        }

        /* Edge toggle button - fixed position */
        .sidebar-toggle {
            position: fixed;
            top: 40px;
            left: 230px; /* Fixed position regardless of sidebar width */
            width: 36px;
            height: 36px;
            background: #1F1D2B;
            border: 2px solid rgba(255, 255, 255, 0.2);
            border-radius: 50%;
            color: white;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 20px;
            transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1), 
                        box-shadow 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.5);
            z-index: 9999;
        }

        /* Toggle button with transition enabled */
        .sidebar-toggle.allow-transition {
            transition: left 0.3s cubic-bezier(0.4, 0, 0.2, 1), 
                        transform 0.3s cubic-bezier(0.4, 0, 0.2, 1),
                        box-shadow 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        }

        /* When sidebar is collapsed, move the toggle button */
        .sidebar:not(.expanded) .sidebar-toggle {
            left: 84px; /* Fixed position for collapsed state */
        }
        
        /* Ensure the expanded state also has the transition */
        .sidebar.expanded .sidebar-toggle {
            left: 230px;
        }

        /* Brand logo area with refined spacing */
        .sidebar-header {
            padding: 20px;
            display: flex;
            align-items: center;
            background: transparent; /* Remove dark background */
            position: relative;
            height: 60px; /* Increase height for better visibility */
            z-index: 2; /* Ensure header is above content */
            border-bottom: none; /* Remove dark line at logo */
        }

        /* Modern Logo Container */
        .logo {
            width: 42px;
            height: 42px;
            display: flex;
            align-items: center;
            justify-content: center;
            background: linear-gradient(135deg, #FF9F69, #FF4B4B);
            border-radius: 12px;
            padding: 8px;
            box-shadow: 0 4px 12px rgba(234, 105, 105, 0.5),
                        inset 0 1px 2px rgba(255, 255, 255, 0.4);
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            position: absolute;
            left: 20px; /* Fixed left position */
            top: 10px;
            overflow: hidden;
            z-index: 3; /* Ensure logo is above header */
        }

        .sidebar-toggle:hover {
            transform: scale(1.1);
        }

        .sidebar-toggle:active {
            transform: scale(0.95);
        }
        
        
        .sidebar-toggle:hover::after {
            opacity: 1;
            transform: translateX(-50%) translateY(-100%) scale(1);
        }
        
        /* When sidebar is not expanded, toggle faces right */
        .sidebar:not(.expanded) .sidebar-toggle i {
            transform: rotate(180deg);
        }

        /* Prevent sidebar scroll on hover */
        .sidebar-content {
            flex: 1;
            overflow-y: auto;
            padding: 20px 0;
            scrollbar-width: thin;
            scrollbar-color: var(--accent-color) transparent;
            margin: 0 10px;
            overflow-x: hidden; /* Prevent horizontal scrollbar */
            padding-right: 10px; /* Add extra padding to account for hover effects */
        }
        
        /* Refine sidebar nav to prevent hover shifts */
        .sidebar-nav {
            list-style: none;
            padding: 0;
            margin: 0;
            display: flex;
            flex-direction: column;
            gap: 8px;
        }

        /* Extra smooth transitions between states */
        .sidebar:not(.expanded) {
            width: var(--sidebar-collapsed-width);
        }
        
        .sidebar:not(.expanded) .sidebar-link i {
            margin-right: 0;
            font-size: 24px;
        }
        
        .sidebar:not(.expanded) .sidebar-text {
            opacity: 0;
            width: 0;
            margin: 0;
        }

        /* Main content styling */
        .main-content {
            margin-left: var(--sidebar-width);
            width: calc(100% - var(--sidebar-width));
            min-height: 100vh;
            transition: margin-left var(--transition-speed) ease, width var(--transition-speed) ease;
            background: linear-gradient(135deg, var(--dark-bg-color) 0%, var(--secondary-bg-color) 100%);
            position: relative;
            z-index: 1; /* Lower z-index than sidebar */
        }

        .sidebar:not(.expanded) + .main-content {
            margin-left: var(--sidebar-collapsed-width);
            width: calc(100% - var(--sidebar-collapsed-width));
        }

        /* Improved notifications badge */
        .notification-badge {
            position: absolute;
            top: 8px;
            right: 12px;
            background: linear-gradient(135deg, #FF9F69, #FF4B4B);
            color: white;
            font-size: 10px;
            min-width: 18px;
            height: 18px;
            border-radius: 9px;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            box-shadow: 0 2px 5px rgba(234, 105, 105, 0.4);
            border: 1px solid rgba(255, 255, 255, 0.2);
        }

        /* Sidebar link hover effect */
        .sidebar-link:hover {
            background: rgba(255, 255, 255, 0.03);
            color: white;
        }

        /* Logo styling */
        .logo svg {
            filter: drop-shadow(0 1px 2px rgba(0, 0, 0, 0.3));
            width: 30px;
            height: 30px;
            transition: all 0.3s ease;
        }

        /* Unified active link styling - removed duplicate styles */
        .sidebar-link.active {
            background: transparent;
            color: var(--accent-color);
            border-left: 4px solid var(--accent-color);
            padding-left: 12px; /* Adjust padding to account for border */
            box-shadow: none;
        }
        
        /* Active link indicator */
        .sidebar-link.active i {
            color: var(--accent-color);
        }

        /* Create a subtle glow behind active sidebar item icon */
        .sidebar-link.active i:after {
            content: '';
            position: absolute;
            width: 100%;
            height: 100%;
            background: radial-gradient(circle, rgba(234, 124, 105, 0.15) 0%, transparent 70%);
            border-radius: 50%;
            left: 50%;
            top: 50%;
            transform: translate(-50%, -50%) scale(1.5);
            opacity: 1;
            z-index: -1;
        }

        /* Improved sidebar link spacing and uniformity */
        .sidebar-link {
            display: flex;
            align-items: center;
            padding: 12px 16px;
            color: var(--text-muted);
            text-decoration: none;
            border-radius: 12px;
            position: relative;
            border: 1px solid transparent;
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            margin: 5px 8px; /* Better spacing */
            min-height: 48px;
            overflow: hidden;
            box-sizing: border-box;
        }

        /* Sidebar hover indicator - simplified */
        .sidebar-link:before {
            content: '';
            position: absolute;
            left: 0;
            top: 50%;
            height: 0;
            width: 3px;
            background: var(--accent-color);
            border-radius: 0 4px 4px 0;
            transform: translateY(-50%);
            transition: height 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            opacity: 0;
        }

        .sidebar-link:hover:before {
            height: 20px;
            opacity: 1;
        }

        /* Remove duplicate animations, keeping simpler effects */
        .sidebar-item:hover .sidebar-link i {
            transform: translateX(3px);
            transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        }

        /* Script to fix page transition bug */
        <script>
        // Sidebar toggle functionality - improved for better transitions
        document.addEventListener('DOMContentLoaded', function () {
            const sidebar = document.getElementById('sidebar');
            const sidebarToggle = document.getElementById('sidebarToggle');
            
            // Apply expanded state from localStorage (no transitions)
            const isExpanded = localStorage.getItem('sidebarExpanded') === 'true';
            
            // Apply page classes for proper sizing
            document.documentElement.classList.add(
                isExpanded ? 'sidebar-expanded-page' : 'sidebar-collapsed-page'
            );
            
            if (isExpanded) {
                sidebar.classList.add('expanded');
            } else {
                sidebar.classList.remove('expanded');
            }
            
            // Add allow-transition class for initial page load
            requestAnimationFrame(() => {
                sidebar.classList.add('allow-transition');
                sidebarToggle.classList.add('allow-transition');
            });
            
            // Update tooltip based on sidebar state
            if (isExpanded) {
                sidebarToggle.setAttribute('data-tooltip', 'Collapse Sidebar');
            } else {
                sidebarToggle.setAttribute('data-tooltip', 'Expand Sidebar');
            }
            
            // Only handle toggle button clicks
            sidebarToggle.addEventListener('click', function () {
                // Toggle sidebar
                sidebar.classList.toggle('expanded');
                const nowExpanded = sidebar.classList.contains('expanded');
                
                // Store state in localStorage and update classes
                localStorage.setItem('sidebarExpanded', nowExpanded);
                document.documentElement.classList.remove('sidebar-expanded-page', 'sidebar-collapsed-page');
                document.documentElement.classList.add(
                    nowExpanded ? 'sidebar-expanded-page' : 'sidebar-collapsed-page'
                );
                
                // Update tooltip
                if (nowExpanded) {
                    sidebarToggle.setAttribute('data-tooltip', 'Collapse Sidebar');
                } else {
                    sidebarToggle.setAttribute('data-tooltip', 'Expand Sidebar');
                }
            });
        });
        </script>
    </style>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Jaegar Resto</title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link href='https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css' rel='stylesheet'>
    <link rel="stylesheet" href="~/css/dashboard.css" asp-append-version="true" />
</head>

<body>
    <div class="dashboard-page">
        <!-- Sidebar -->
        <div class="sidebar" id="sidebar">
            <div class="sidebar-header">
                <div class="logo">
                    <svg xmlns="http://www.w3.org/2000/svg" width="26" height="26" viewBox="0 0 40 40" fill="none">
                        <path
                            d="M31.6667 3.33337H8.33337C5.57671 3.33337 3.33337 5.57671 3.33337 8.33337V13.0517C3.33337 14.8067 3.97004 16.4017 5.00004 17.6284V33.3334C5.00004 33.7754 5.17564 34.1993 5.4882 34.5119C5.80076 34.8244 6.22468 35 6.66671 35H20C20.4421 35 20.866 34.8244 21.1786 34.5119C21.4911 34.1993 21.6667 33.7754 21.6667 33.3334V25H28.3334V33.3334C28.3334 33.7754 28.509 34.1993 28.8215 34.5119C29.1341 34.8244 29.558 35 30 35H33.3334C33.7754 35 34.1993 34.8244 34.5119 34.5119C34.8244 34.1993 35 33.7754 35 33.3334V17.6267C36.03 16.4017 36.6667 14.8067 36.6667 13.05V8.33337C36.6667 5.57671 34.4234 3.33337 31.6667 3.33337ZM33.3334 8.33337V13.0517C33.3334 14.9517 31.9184 16.5717 30.1817 16.6634L30 16.6667C28.1617 16.6667 26.6667 15.1717 26.6667 13.3334V6.66671H31.6667C32.5867 6.66671 33.3334 7.41504 33.3334 8.33337ZM16.6667 13.3334V6.66671H23.3334V13.3334C23.3334 15.1717 21.8384 16.6667 20 16.6667C18.1617 16.6667 16.6667 15.1717 16.6667 13.3334ZM6.66671 8.33337C6.66671 7.41504 7.41337 6.66671 8.33337 6.66671H13.3334V13.3334C13.3334 15.1717 11.8384 16.6667 10 16.6667L9.81837 16.6617C8.08171 16.5717 6.66671 14.9517 6.66671 13.0517V8.33337ZM16.6667 26.6667H10V21.6667H16.6667V26.6667Z"
                            fill="url(#paint0_linear_429_686)" />
                        <defs>
                            <linearGradient id="paint0_linear_429_686" x1="20" y1="3.33337" x2="20" y2="35"
                                gradientUnits="userSpaceOnUse">
                                <stop stop-color="#FFFFFF" />
                                <stop offset="1" stop-color="#F0F0F0" />
                            </linearGradient>
                        </defs>
                    </svg>
                </div>
            </div>
            
            <!-- Edge toggle button - moved outside header for better visibility -->
            <button id="sidebarToggle" class="sidebar-toggle" data-tooltip="Toggle Sidebar">
                <i class='bx bx-chevron-left'></i>
            </button>
            
            <div class="sidebar-content">
                <ul class="sidebar-nav">
                    <li class="sidebar-item">
                        <a href="/Dashboard"
                            class="sidebar-link @((Context.Request.Path.Value?.Equals("/Dashboard") == true || Context.Request.Path.Value?.Equals("/Dashboard/Index") == true) ? "active" : "")">
                            <i class='bx bx-home-alt'></i>
                            <span class="sidebar-text">Dashboard</span>
                        </a>
                    </li>
                    <li class="sidebar-item">
                        <a href="/Dashboard/Order"
                            class="sidebar-link @(Context.Request.Path.Value?.Contains("/Dashboard/Order") == true ? "active" : "")">
                            <i class='bx bx-food-menu'></i>
                            <span class="sidebar-text">Orders</span>
                            @{
                                // Get cart item count from session if available
                                var cartItemCount = Context.Session.GetString("CartItemCount");
                                if (!string.IsNullOrEmpty(cartItemCount) && int.TryParse(cartItemCount, out int count) && count > 0)
                                {
                                    <span class="notification-badge">@count</span>
                                }
                            }
                        </a>
                    </li>
                    <li class="sidebar-item">
                        <a href="/Dashboard/Menu"
                            class="sidebar-link @(Context.Request.Path.Value?.Contains("/Dashboard/Menu") == true ? "active" : "")">
                            <i class='bx bx-pie-chart-alt'></i>
                            <span class="sidebar-text">Menu</span>
                        </a>
                    </li>
                    <li class="sidebar-item">
                        <a href="/Dashboard/Payment"
                            class="sidebar-link @(Context.Request.Path.Value?.Contains("/Dashboard/Payment") == true ? "active" : "")">
                            <i class='bx bx-credit-card'></i>
                            <span class="sidebar-text">Payment</span>
                        </a>
                    </li>
                    <li class="sidebar-item">
                        <a href="/Dashboard/Notifications"
                            class="sidebar-link @(Context.Request.Path.Value?.Contains("/Dashboard/Notifications") == true ? "active" : "")">
                            <i class='bx bx-bell'></i>
                            <span class="sidebar-text">Notifications</span>
                            <span class="notification-badge">3</span>
                        </a>
                    </li>
                </ul>
            </div>

            <div class="sidebar-footer">
                <div class="user-info">
                    <div class="user-avatar">
                        <img src="~/images/avatar.jpg" alt="User"
                            onerror="this.src='https://ui-avatars.com/api/?name=User&background=EA7C69&color=fff'">
                    </div>
                    <div class="user-details">
                        <p class="user-name">@username</p>
                        <p class="user-role">@(isAdmin ? "Administrator" : "Staff")</p>
                    </div>
                </div>
                <a href="/Account/Logout" class="sidebar-link logout-link">
                    <i class='bx bx-log-out'></i>
                    <span class="sidebar-text">Logout</span>
                </a>
            </div>
        </div>

        <!-- Main Content -->
        <div class="main-content">
            <div class="dashboard-container">
                @if (TempData["SuccessMessage"] != null)
                {
                    <div class="success-message">
                        <span>@TempData["SuccessMessage"]</span>
                        <button class="close-btn" onclick="this.parentElement.style.display='none';">
                            <i class='bx bx-x'></i>
                        </button>
                    </div>
                }
                
                @if (TempData["ErrorMessage"] != null)
                {
                    <div class="error-message">
                        <span>@TempData["ErrorMessage"]</span>
                        <button class="close-btn" onclick="this.parentElement.style.display='none';">
                            <i class='bx bx-x'></i>
                        </button>
                    </div>
                }
                
                @RenderBody()
            </div>
        </div>
    </div>

    <script>
        // Sidebar toggle functionality
        document.addEventListener('DOMContentLoaded', function () {
            const sidebar = document.getElementById('sidebar');
            const sidebarToggle = document.getElementById('sidebarToggle');
            
            // Apply expanded state from localStorage (no transitions)
            const isExpanded = localStorage.getItem('sidebarExpanded') === 'true';
            
            // Apply page classes for proper sizing
            document.documentElement.classList.add(
                isExpanded ? 'sidebar-expanded-page' : 'sidebar-collapsed-page'
            );
            
            if (isExpanded) {
                sidebar.classList.add('expanded');
            } else {
                sidebar.classList.remove('expanded');
            }
            
            // Add allow-transition class for initial page load
            requestAnimationFrame(() => {
                sidebar.classList.add('allow-transition');
                sidebarToggle.classList.add('allow-transition');
            });
            
            // Update tooltip based on sidebar state
            if (isExpanded) {
                sidebarToggle.setAttribute('data-tooltip', 'Collapse Sidebar');
            } else {
                sidebarToggle.setAttribute('data-tooltip', 'Expand Sidebar');
            }
            
            // Only handle toggle button clicks
            sidebarToggle.addEventListener('click', function () {
                // Toggle sidebar
                sidebar.classList.toggle('expanded');
                const nowExpanded = sidebar.classList.contains('expanded');
                
                // Store state in localStorage and update classes
                localStorage.setItem('sidebarExpanded', nowExpanded);
                document.documentElement.classList.remove('sidebar-expanded-page', 'sidebar-collapsed-page');
                document.documentElement.classList.add(
                    nowExpanded ? 'sidebar-expanded-page' : 'sidebar-collapsed-page'
                );
                
                // Update tooltip
                if (nowExpanded) {
                    sidebarToggle.setAttribute('data-tooltip', 'Collapse Sidebar');
                } else {
                    sidebarToggle.setAttribute('data-tooltip', 'Expand Sidebar');
                }
            });

            // Add hover effect to sidebar menu items
            const sidebarItems = document.querySelectorAll('.sidebar-item');
            sidebarItems.forEach(item => {
                item.addEventListener('mouseenter', function() {
                    if (!sidebar.classList.contains('expanded')) {
                        this.style.transform = 'translateX(5px)';
                    }
                });
                
                item.addEventListener('mouseleave', function() {
                    this.style.transform = 'translateX(0)';
                });
            });
        });

        // Add these styles dynamically
        document.addEventListener('DOMContentLoaded', function() {
            // Ensure smooth transitions by adding CSS
            const style = document.createElement('style');
            style.textContent = `
                .user-name {
                    color: var(--text-color);
                    font-weight: 500;
                    font-size: 14px;
                    margin: 0;
                    white-space: nowrap;
                }

                .user-role {
                    color: var(--text-muted);
                    font-size: 12px;
                    margin: 0;
                    white-space: nowrap;
                }
                
                .user-details {
                    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
                    overflow: hidden;
                }

                .sidebar:not(.expanded) .user-details {
                    width: 0;
                    opacity: 0;
                    margin: 0;
                }
                
                .sidebar:not(.expanded) .user-avatar {
                    margin-right: 0;
                    width: 42px;
                    height: 42px;
                }
                
                .user-avatar img {
                    width: 100%;
                    height: 100%;
                    object-fit: cover;
                    transition: all 0.3s ease;
                }
                
                .user-avatar:hover img {
                    transform: scale(1.05);
                }
                
                .sidebar-content::-webkit-scrollbar {
                    width: 4px;
                }

                .sidebar-content::-webkit-scrollbar-track {
                    background: transparent;
                }

                .sidebar-content::-webkit-scrollbar-thumb {
                    background-color: var(--accent-color);
                    border-radius: 20px;
                }
                
                .sidebar.allow-transition {
                    transition: width var(--transition-speed) cubic-bezier(0.4, 0, 0.2, 1);
                }
                
                .sidebar-link i {
                    position: relative;
                    z-index: 2;
                }
                
                /* Add a subtle radial gradient behind icons */
                .sidebar-link i:after {
                    content: '';
                    position: absolute;
                    width: 32px;
                    height: 32px;
                    background: radial-gradient(circle, rgba(234, 124, 105, 0.1) 0%, transparent 70%);
                    border-radius: 50%;
                    z-index: -1;
                    left: 50%;
                    top: 50%;
                    transform: translate(-50%, -50%);
                    opacity: 0;
                    transition: opacity 0.3s ease;
                }
                
                .sidebar-link:hover i:after,
                .sidebar-link.active i:after {
                    opacity: 1;
                }
                
                .sidebar-text {
                    white-space: nowrap;
                    opacity: 1;
                    transition: opacity var(--transition-speed) cubic-bezier(0.4, 0, 0.2, 1);
                    font-weight: 500;
                    position: relative;
                    z-index: 1;
                }
            `;
            document.head.appendChild(style);
        });
    </script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>