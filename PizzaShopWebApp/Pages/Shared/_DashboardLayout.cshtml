<!DOCTYPE html>
<html lang="en">

<head>
    <style>
        body { visibility: hidden; }
        html.sidebar-ready body { visibility: visible; }
    </style>
    <script>
        // Hide body until sidebar state is applied
        document.documentElement.classList.add(
            localStorage.getItem('sidebarExpanded') === 'true' 
            ? 'sidebar-expanded-page' 
            : 'sidebar-collapsed-page'
        );
        
        window.addEventListener('DOMContentLoaded', function() {
            requestAnimationFrame(function() {
                document.documentElement.classList.add('sidebar-ready');
            });
        });
    </script>
    <style>
        html.sidebar-expanded-page .sidebar {
            width: 250px !important;
        }
        html.sidebar-expanded-page .main-content {
            margin-left: 250px !important;
            width: calc(100% - 250px) !important;
        }
    </style>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Jaegar Resto</title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link href='https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css' rel='stylesheet'>
    <link rel="stylesheet" href="~/css/dashboard.css" asp-append-version="true" />
</head>

<body>
    <div class="dashboard-page">
        <!-- Sidebar -->
        <div class="sidebar" id="sidebar">
            <div class="sidebar-header">
                <div class="logo">
                    <svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 40 40" fill="none">
                        <path
                            d="M31.6667 3.33337H8.33337C5.57671 3.33337 3.33337 5.57671 3.33337 8.33337V13.0517C3.33337 14.8067 3.97004 16.4017 5.00004 17.6284V33.3334C5.00004 33.7754 5.17564 34.1993 5.4882 34.5119C5.80076 34.8244 6.22468 35 6.66671 35H20C20.4421 35 20.866 34.8244 21.1786 34.5119C21.4911 34.1993 21.6667 33.7754 21.6667 33.3334V25H28.3334V33.3334C28.3334 33.7754 28.509 34.1993 28.8215 34.5119C29.1341 34.8244 29.558 35 30 35H33.3334C33.7754 35 34.1993 34.8244 34.5119 34.5119C34.8244 34.1993 35 33.7754 35 33.3334V17.6267C36.03 16.4017 36.6667 14.8067 36.6667 13.05V8.33337C36.6667 5.57671 34.4234 3.33337 31.6667 3.33337ZM33.3334 8.33337V13.0517C33.3334 14.9517 31.9184 16.5717 30.1817 16.6634L30 16.6667C28.1617 16.6667 26.6667 15.1717 26.6667 13.3334V6.66671H31.6667C32.5867 6.66671 33.3334 7.41504 33.3334 8.33337ZM16.6667 13.3334V6.66671H23.3334V13.3334C23.3334 15.1717 21.8384 16.6667 20 16.6667C18.1617 16.6667 16.6667 15.1717 16.6667 13.3334ZM6.66671 8.33337C6.66671 7.41504 7.41337 6.66671 8.33337 6.66671H13.3334V13.3334C13.3334 15.1717 11.8384 16.6667 10 16.6667L9.81837 16.6617C8.08171 16.5717 6.66671 14.9517 6.66671 13.0517V8.33337ZM16.6667 26.6667H10V21.6667H16.6667V26.6667Z"
                            fill="url(#paint0_linear_429_686)" />
                        <defs>
                            <linearGradient id="paint0_linear_429_686" x1="20" y1="3.33337" x2="20" y2="35"
                                gradientUnits="userSpaceOnUse">
                                <stop stop-color="#EA9769" />
                                <stop offset="1" stop-color="#EA6969" />
                            </linearGradient>
                        </defs>
                    </svg>
                </div>
                <button id="sidebarToggle" class="sidebar-toggle">
                    <i class='bx bx-menu'></i>
                </button>
            </div>

            <div class="sidebar-content">
                <ul class="sidebar-nav">
                    <li class="sidebar-item">
                        <a href="/Dashboard"
                            class="sidebar-link @((Context.Request.Path.Value?.Equals("/Dashboard") == true || Context.Request.Path.Value?.Equals("/Dashboard/Index") == true) ? "active" : "")">
                            <i class='bx bx-home-alt'></i>
                            <span class="sidebar-text">Dashboard</span>
                        </a>
                    </li>
                    <li class="sidebar-item">
                        <a href="/Dashboard/Order"
                            class="sidebar-link @(Context.Request.Path.Value?.Contains("/Dashboard/Order") == true ? "active" : "")">
                            <i class='bx bx-food-menu'></i>
                            <span class="sidebar-text">Orders</span>
                            <span class="notification-badge">5</span>
                        </a>
                    </li>
                    <li class="sidebar-item">
                        <a href="/Dashboard/Menu"
                            class="sidebar-link @(Context.Request.Path.Value?.Contains("/Dashboard/Menu") == true ? "active" : "")">
                            <i class='bx bx-pie-chart-alt'></i>
                            <span class="sidebar-text">Menu</span>
                        </a>
                    </li>
                    <li class="sidebar-item">
                        <a href="/Dashboard/Payment"
                            class="sidebar-link @(Context.Request.Path.Value?.Contains("/Dashboard/Payment") == true ? "active" : "")">
                            <i class='bx bx-credit-card'></i>
                            <span class="sidebar-text">Payment</span>
                        </a>
                    </li>
                    <li class="sidebar-item">
                        <a href="/Dashboard/Notifications"
                            class="sidebar-link @(Context.Request.Path.Value?.Contains("/Dashboard/Notifications") == true ? "active" : "")">
                            <i class='bx bx-bell'></i>
                            <span class="sidebar-text">Notifications</span>
                            <span class="notification-badge">3</span>
                        </a>
                    </li>
                    <li class="sidebar-item">
                        <a href="/Dashboard/Settings"
                            class="sidebar-link @(Context.Request.Path.Value?.Contains("/Dashboard/Settings") == true ? "active" : "")">
                            <i class='bx bx-cog'></i>
                            <span class="sidebar-text">Settings</span>
                        </a>
                    </li>
                </ul>
            </div>

            <div class="sidebar-footer">
                <div class="user-info">
                    <div class="user-avatar">
                        <img src="~/images/avatar.jpg" alt="User"
                            onerror="this.src='https://ui-avatars.com/api/?name=User&background=EA7C69&color=fff'">
                    </div>
                    <div class="user-details">
                        <span class="user-name">Admin User</span>
                        <span class="user-role">Administrator</span>
                    </div>
                </div>
                <a href="/Account/Logout" class="sidebar-link logout-link">
                    <i class='bx bx-log-out'></i>
                    <span class="sidebar-text">Logout</span>
                </a>
            </div>
        </div>

        <!-- Main Content -->
        <div class="main-content">
            <div class="dashboard-container">
                @RenderBody()
            </div>
        </div>
    </div>

    <script>
        // Sidebar toggle functionality
        document.addEventListener('DOMContentLoaded', function () {
            const sidebar = document.getElementById('sidebar');
            const sidebarToggle = document.getElementById('sidebarToggle');
            
            // Apply expanded state from localStorage (no transitions)
            const isExpanded = localStorage.getItem('sidebarExpanded') === 'true';
            if (isExpanded) {
                sidebar.classList.add('expanded');
            }
            
            // Update icon
            const icon = sidebarToggle.querySelector('i');
            if (isExpanded) {
                icon.classList.remove('bx-menu');
                icon.classList.add('bx-menu-alt-right');
            }
            
            // Only handle toggle button clicks
            sidebarToggle.addEventListener('click', function () {
                // Enable transitions only for the toggle animation
                sidebar.classList.add('allow-transition');
                
                // Toggle sidebar
                sidebar.classList.toggle('expanded');
                localStorage.setItem('sidebarExpanded', sidebar.classList.contains('expanded'));
                
                // Toggle icon
                const icon = this.querySelector('i');
                if (sidebar.classList.contains('expanded')) {
                    icon.classList.remove('bx-menu');
                    icon.classList.add('bx-menu-alt-right');
                } else {
                    icon.classList.remove('bx-menu-alt-right');
                    icon.classList.add('bx-menu');
                }
                
                // Disable transitions after animation completes
                setTimeout(() => {
                    sidebar.classList.remove('allow-transition');
                }, 300); // Match with transition-speed variable (0.3s)
            });
        });
    </script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>