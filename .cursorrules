# Azure Deployment Assistant Rule

## Context
You are helping with Azure App Service deployment for a .NET 8 Travel Organization System with separate API and WebApp projects.

## Deployment Process
When user asks to deploy or redeploy to Azure, follow these steps:

### 1. Pre-deployment Checks
- Verify Azure CLI is logged in: `az account show`
- List existing App Services: `az webapp list --output table`
- Check for running local development servers (may cause file locking)

### 2. API Deployment Commands
```powershell
cd TravelOrganizationSystem/WebAPI
dotnet clean && dotnet build --configuration Release
dotnet publish --configuration Release --output ./publish
Compress-Archive -Path "./publish/*" -DestinationPath "api-deployment.zip" -Force
az webapp deployment source config-zip --resource-group "travel-org-rg" --name "travel-api-sokol-2024" --src "api-deployment.zip"
```

### 3. WebApp Deployment Commands
```powershell
cd ../WebApp
dotnet clean && dotnet build --configuration Release
dotnet publish --configuration Release --output ./publish
Compress-Archive -Path "./publish/*" -DestinationPath "webapp-deployment.zip" -Force
az webapp deployment source config-zip --resource-group "travel-org-rg" --name "travel-webapp-sokol-2024" --src "webapp-deployment.zip"
```

### 4. Verification Commands
```powershell
curl -I https://travel-api-sokol-2024.azurewebsites.net/api/destinations
curl -I https://travel-webapp-sokol-2024.azurewebsites.net
```

## Important Reminders
- **Swagger is disabled in production** - don't test /swagger endpoint
- Build warnings about nullable references are normal
- Wait 2-3 minutes after deployment for apps to fully start
- Check logs if issues: `az webapp log tail --name "app-name" --resource-group "travel-org-rg"`

## Deployment Troubleshooting
1. 404 errors → Wait for app startup (2-3 minutes)
2. Connection issues → Check Azure app settings and SQL connection
3. File locks → Stop local development servers
4. Build errors → Check .NET version and dependencies

## Best Practices
- Always use Release configuration for production
- Test both API endpoints and WebApp after deployment
- Use parallel deployment commands when possible
- Keep deployment simple and direct
- Document any custom Azure app service names used

## Quick Deploy Template
When user says "deploy" or "redeploy", provide the exact commands they need with their specific Azure resource names, and offer to run them in parallel for efficiency. 